12:18:06.249 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
12:18:06.253 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
12:18:06.253 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
12:18:06.253 [main] INFO  dev.console -
				3. Mettre à jour une pizza
12:18:06.253 [main] INFO  dev.console -
				4. Supprimer une pizza
12:18:06.253 [main] INFO  dev.console -
				99. Sortir 
12:18:06.253 [main] INFO  dev.console -
				Votre choix : 
12:18:08.671 [main] INFO  dev.console -
				Liste des pizzas
12:18:08.679 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €)
12:18:08.679 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €)
12:18:08.679 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €)
12:18:08.679 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €)
12:18:08.679 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €)
12:18:08.679 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €)
12:18:08.679 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €)
12:18:08.679 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €)
12:18:08.679 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
12:18:08.679 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
12:18:08.679 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
12:18:08.679 [main] INFO  dev.console -
				3. Mettre à jour une pizza
12:18:08.679 [main] INFO  dev.console -
				4. Supprimer une pizza
12:18:08.679 [main] INFO  dev.console -
				99. Sortir 
12:18:08.679 [main] INFO  dev.console -
				Votre choix : 
13:41:19.062 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
13:41:19.062 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
13:41:19.062 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
13:41:19.062 [main] INFO  dev.console -
				3. Mettre à jour une pizza
13:41:19.062 [main] INFO  dev.console -
				4. Supprimer une pizza
13:41:19.062 [main] INFO  dev.console -
				99. Sortir 
13:41:19.062 [main] INFO  dev.console -
				Votre choix : 
13:41:20.926 [main] INFO  dev.console -
				Liste des pizzas
13:41:20.928 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €)Viande
13:41:20.928 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €)Sans Viande
13:41:20.928 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €)Viande
13:41:20.928 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €)Sans Viande
13:41:20.928 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €)Viande
13:41:20.928 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €)Viande
13:41:20.928 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €)Viande
13:41:20.928 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €)Viande
13:41:20.928 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
13:41:20.928 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
13:41:20.928 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
13:41:20.928 [main] INFO  dev.console -
				3. Mettre à jour une pizza
13:41:20.928 [main] INFO  dev.console -
				4. Supprimer une pizza
13:41:20.928 [main] INFO  dev.console -
				99. Sortir 
13:41:20.928 [main] INFO  dev.console -
				Votre choix : 
13:41:39.620 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
13:41:39.624 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
13:41:39.624 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
13:41:39.624 [main] INFO  dev.console -
				3. Mettre à jour une pizza
13:41:39.624 [main] INFO  dev.console -
				4. Supprimer une pizza
13:41:39.624 [main] INFO  dev.console -
				99. Sortir 
13:41:39.624 [main] INFO  dev.console -
				Votre choix : 
13:41:41.517 [main] INFO  dev.console -
				Liste des pizzas
13:41:41.520 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €)Viande
13:41:41.520 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €)Sans Viande
13:41:41.520 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €)Viande
13:41:41.520 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €)Sans Viande
13:41:41.520 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €)Viande
13:41:41.520 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €)Viande
13:41:41.520 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €)Viande
13:41:41.520 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €)Viande
13:41:41.520 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
13:41:41.521 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
13:41:41.521 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
13:41:41.521 [main] INFO  dev.console -
				3. Mettre à jour une pizza
13:41:41.521 [main] INFO  dev.console -
				4. Supprimer une pizza
13:41:41.521 [main] INFO  dev.console -
				99. Sortir 
13:41:41.521 [main] INFO  dev.console -
				Votre choix : 
13:41:54.158 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
13:41:54.162 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
13:41:54.162 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
13:41:54.162 [main] INFO  dev.console -
				3. Mettre à jour une pizza
13:41:54.162 [main] INFO  dev.console -
				4. Supprimer une pizza
13:41:54.162 [main] INFO  dev.console -
				99. Sortir 
13:41:54.162 [main] INFO  dev.console -
				Votre choix : 
13:41:55.582 [main] INFO  dev.console -
				Liste des pizzas
13:41:55.585 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
13:41:55.585 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
13:41:55.585 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
13:41:55.585 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
13:41:55.585 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
13:41:55.585 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
13:41:55.585 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
13:41:55.585 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
13:41:55.585 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
13:41:55.585 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
13:41:55.585 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
13:41:55.585 [main] INFO  dev.console -
				3. Mettre à jour une pizza
13:41:55.585 [main] INFO  dev.console -
				4. Supprimer une pizza
13:41:55.585 [main] INFO  dev.console -
				99. Sortir 
13:41:55.585 [main] INFO  dev.console -
				Votre choix : 
13:42:17.990 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

13:42:17.991 [main] INFO  dev.console -
				Veuillez saisir le code

13:42:21.774 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

13:42:23.406 [main] INFO  dev.console -
				Veuillez saisir le prix

13:42:25.429 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

13:42:29.606 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
13:42:29.608 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
13:42:29.608 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
13:42:29.608 [main] INFO  dev.console -
				3. Mettre à jour une pizza
13:42:29.608 [main] INFO  dev.console -
				4. Supprimer une pizza
13:42:29.608 [main] INFO  dev.console -
				99. Sortir 
13:42:29.608 [main] INFO  dev.console -
				Votre choix : 
13:42:31.948 [main] INFO  dev.console -
				Liste des pizzas
13:42:31.951 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
13:42:31.951 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
13:42:31.951 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
13:42:31.951 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
13:42:31.951 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
13:42:31.951 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
13:42:31.951 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
13:42:31.951 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
13:42:31.951 [main] INFO  dev.console -
				GHJ -> jhkaz(123.0 €) Poisson
13:42:31.951 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
13:42:31.951 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
13:42:31.951 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
13:42:31.951 [main] INFO  dev.console -
				3. Mettre à jour une pizza
13:42:31.951 [main] INFO  dev.console -
				4. Supprimer une pizza
13:42:31.951 [main] INFO  dev.console -
				99. Sortir 
13:42:31.951 [main] INFO  dev.console -
				Votre choix : 
13:38:37.861 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
13:38:37.863 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
13:38:37.863 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
13:38:37.863 [main] INFO  dev.console -
				3. Mettre à jour une pizza
13:38:37.863 [main] INFO  dev.console -
				4. Supprimer une pizza
13:38:37.864 [main] INFO  dev.console -
				99. Sortir 
13:38:37.864 [main] INFO  dev.console -
				Votre choix : 
14:04:25.023 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:04:25.023 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:04:25.023 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:04:25.023 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:04:25.023 [main] INFO  dev.console -
				4. Supprimer une pizza
14:04:25.023 [main] INFO  dev.console -
				99. Sortir 
14:04:25.023 [main] INFO  dev.console -
				Votre choix : 
14:06:13.845 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:06:13.861 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:06:13.861 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:06:13.861 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:06:13.861 [main] INFO  dev.console -
				4. Supprimer une pizza
14:06:13.861 [main] INFO  dev.console -
				99. Sortir 
14:06:13.861 [main] INFO  dev.console -
				Votre choix : 
14:07:17.713 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:07:17.729 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:07:17.729 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:07:17.729 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:07:17.729 [main] INFO  dev.console -
				4. Supprimer une pizza
14:07:17.729 [main] INFO  dev.console -
				99. Sortir 
14:07:17.729 [main] INFO  dev.console -
				Votre choix : 
14:13:00.402 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:13:00.413 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:13:00.413 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:13:00.413 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:13:00.413 [main] INFO  dev.console -
				4. Supprimer une pizza
14:13:00.413 [main] INFO  dev.console -
				99. Sortir 
14:13:00.413 [main] INFO  dev.console -
				Votre choix : 
14:14:20.300 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:14:20.316 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:14:20.316 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:14:20.316 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:14:20.316 [main] INFO  dev.console -
				4. Supprimer une pizza
14:14:20.316 [main] INFO  dev.console -
				99. Sortir 
14:14:20.316 [main] INFO  dev.console -
				Votre choix : 
14:15:56.662 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:15:56.662 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:15:56.662 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:15:56.662 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:15:56.662 [main] INFO  dev.console -
				4. Supprimer une pizza
14:15:56.662 [main] INFO  dev.console -
				99. Sortir 
14:15:56.662 [main] INFO  dev.console -
				Votre choix : 
14:16:24.615 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:16:24.618 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:16:24.618 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:16:24.618 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:16:24.618 [main] INFO  dev.console -
				4. Supprimer une pizza
14:16:24.618 [main] INFO  dev.console -
				99. Sortir 
14:16:24.618 [main] INFO  dev.console -
				Votre choix : 
14:20:12.389 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:20:12.389 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:20:12.389 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:20:12.389 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:20:12.389 [main] INFO  dev.console -
				4. Supprimer une pizza
14:20:12.389 [main] INFO  dev.console -
				99. Sortir 
14:20:12.389 [main] INFO  dev.console -
				Votre choix : 
14:20:13.968 [main] INFO  dev.console -
				Liste des pizzas
14:20:13.972 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
14:20:13.972 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
14:20:13.972 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
14:20:13.972 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
14:20:13.972 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
14:20:13.972 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
14:20:13.972 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
14:20:13.972 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
14:20:13.972 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:20:13.972 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:20:13.972 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:20:13.972 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:20:13.972 [main] INFO  dev.console -
				4. Supprimer une pizza
14:20:13.972 [main] INFO  dev.console -
				99. Sortir 
14:20:13.973 [main] INFO  dev.console -
				Votre choix : 
14:20:19.709 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

14:20:19.721 [main] INFO  dev.console -
				Veuillez saisir le code

14:20:22.464 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

14:20:24.752 [main] INFO  dev.console -
				Veuillez saisir le prix

14:20:27.998 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

14:20:31.772 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:20:31.772 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:20:31.772 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:20:31.772 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:20:31.772 [main] INFO  dev.console -
				4. Supprimer une pizza
14:20:31.772 [main] INFO  dev.console -
				99. Sortir 
14:20:31.772 [main] INFO  dev.console -
				Votre choix : 
14:25:21.827 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:25:21.827 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:25:21.827 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:25:21.827 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:25:21.827 [main] INFO  dev.console -
				4. Supprimer une pizza
14:25:21.827 [main] INFO  dev.console -
				99. Sortir 
14:25:21.827 [main] INFO  dev.console -
				Votre choix : 
14:25:25.336 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

14:25:25.351 [main] INFO  dev.console -
				Veuillez saisir le code

14:25:27.191 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

14:25:29.137 [main] INFO  dev.console -
				Veuillez saisir le prix

14:25:30.329 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

14:25:32.707 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:25:32.707 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:25:32.707 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:25:32.707 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:25:32.707 [main] INFO  dev.console -
				4. Supprimer une pizza
14:25:32.707 [main] INFO  dev.console -
				99. Sortir 
14:25:32.707 [main] INFO  dev.console -
				Votre choix : 
14:29:00.754 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:29:00.754 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:29:00.754 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:29:00.754 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:29:00.754 [main] INFO  dev.console -
				4. Supprimer une pizza
14:29:00.754 [main] INFO  dev.console -
				99. Sortir 
14:29:00.754 [main] INFO  dev.console -
				Votre choix : 
14:29:04.063 [main] INFO  dev.console -
				Liste des pizzas
14:29:04.079 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
14:29:04.079 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
14:29:04.079 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
14:29:04.079 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
14:29:04.079 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
14:29:04.079 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
14:29:04.079 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
14:29:04.079 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
14:29:04.079 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:29:04.079 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:29:04.079 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:29:04.079 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:29:04.079 [main] INFO  dev.console -
				4. Supprimer une pizza
14:29:04.079 [main] INFO  dev.console -
				99. Sortir 
14:29:04.079 [main] INFO  dev.console -
				Votre choix : 
14:29:06.693 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

14:29:06.702 [main] INFO  dev.console -
				Veuillez saisir le code

14:29:09.746 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

14:29:11.509 [main] INFO  dev.console -
				Veuillez saisir le prix

14:29:13.308 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

14:29:15.809 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:29:15.822 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:29:15.822 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:29:15.822 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:29:15.822 [main] INFO  dev.console -
				4. Supprimer une pizza
14:29:15.822 [main] INFO  dev.console -
				99. Sortir 
14:29:15.822 [main] INFO  dev.console -
				Votre choix : 
14:29:18.073 [main] INFO  dev.console -
				Liste des pizzas
14:29:18.078 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
14:29:18.078 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
14:29:18.078 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
14:29:18.078 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
14:29:18.078 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
14:29:18.078 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
14:29:18.078 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
14:29:18.078 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
14:29:18.078 [main] INFO  dev.console -
				KEB -> Kebab(13.0 €) Viande
14:29:18.078 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:29:18.078 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:29:18.078 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:29:18.078 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:29:18.078 [main] INFO  dev.console -
				4. Supprimer une pizza
14:29:18.079 [main] INFO  dev.console -
				99. Sortir 
14:29:18.079 [main] INFO  dev.console -
				Votre choix : 
14:29:24.378 [main] INFO  dev.console -
				Au revoir :(
14:29:52.205 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:29:52.205 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:29:52.205 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:29:52.205 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:29:52.205 [main] INFO  dev.console -
				4. Supprimer une pizza
14:29:52.205 [main] INFO  dev.console -
				99. Sortir 
14:29:52.205 [main] INFO  dev.console -
				Votre choix : 
14:29:54.298 [main] INFO  dev.console -
				Liste des pizzas
14:29:54.312 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
14:29:54.312 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
14:29:54.312 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
14:29:54.313 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
14:29:54.313 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
14:29:54.313 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
14:29:54.313 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
14:29:54.313 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
14:29:54.313 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:29:54.313 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:29:54.313 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:29:54.313 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:29:54.313 [main] INFO  dev.console -
				4. Supprimer une pizza
14:29:54.313 [main] INFO  dev.console -
				99. Sortir 
14:29:54.313 [main] INFO  dev.console -
				Votre choix : 
14:29:56.143 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

14:29:56.158 [main] INFO  dev.console -
				Veuillez saisir le code

14:29:58.049 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

14:29:59.742 [main] INFO  dev.console -
				Veuillez saisir le prix

14:30:01.473 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

14:30:03.817 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:30:03.817 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:30:03.817 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:30:03.817 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:30:03.817 [main] INFO  dev.console -
				4. Supprimer une pizza
14:30:03.817 [main] INFO  dev.console -
				99. Sortir 
14:30:03.817 [main] INFO  dev.console -
				Votre choix : 
14:30:10.479 [main] INFO  dev.console -
				Liste des pizzas
14:30:10.494 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
14:30:10.494 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
14:30:10.494 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
14:30:10.494 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
14:30:10.494 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
14:30:10.494 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
14:30:10.494 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
14:30:10.494 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
14:30:10.494 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:30:10.494 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:30:10.494 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:30:10.495 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:30:10.495 [main] INFO  dev.console -
				4. Supprimer une pizza
14:30:10.495 [main] INFO  dev.console -
				99. Sortir 
14:30:10.495 [main] INFO  dev.console -
				Votre choix : 
14:31:59.670 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:31:59.670 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:31:59.670 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:31:59.670 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:31:59.670 [main] INFO  dev.console -
				4. Supprimer une pizza
14:31:59.670 [main] INFO  dev.console -
				99. Sortir 
14:31:59.670 [main] INFO  dev.console -
				Votre choix : 
14:32:03.378 [main] INFO  dev.console -
				Liste des pizzas
14:32:03.392 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
14:32:03.392 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
14:32:03.392 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
14:32:03.392 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
14:32:03.392 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
14:32:03.392 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
14:32:03.392 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
14:32:03.392 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
14:32:03.392 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:32:03.392 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:32:03.392 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:32:03.392 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:32:03.393 [main] INFO  dev.console -
				4. Supprimer une pizza
14:32:03.393 [main] INFO  dev.console -
				99. Sortir 
14:32:03.393 [main] INFO  dev.console -
				Votre choix : 
14:32:04.592 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

14:32:04.605 [main] INFO  dev.console -
				Veuillez saisir le code

14:32:05.731 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

14:32:07.454 [main] INFO  dev.console -
				Veuillez saisir le prix

14:32:09.041 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

14:32:11.322 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:32:11.333 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:32:11.333 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:32:11.333 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:32:11.333 [main] INFO  dev.console -
				4. Supprimer une pizza
14:32:11.333 [main] INFO  dev.console -
				99. Sortir 
14:32:11.333 [main] INFO  dev.console -
				Votre choix : 
14:32:12.662 [main] INFO  dev.console -
				Liste des pizzas
14:32:12.670 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
14:32:12.670 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
14:32:12.670 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
14:32:12.670 [main] INFO  dev.console -
				KEB -> Kebab(13.0 €) Viande
14:32:12.670 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
14:32:12.670 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
14:32:12.670 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
14:32:12.670 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
14:32:12.670 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
14:32:12.670 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:32:12.670 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:32:12.670 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:32:12.670 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:32:12.670 [main] INFO  dev.console -
				4. Supprimer une pizza
14:32:12.670 [main] INFO  dev.console -
				99. Sortir 
14:32:12.670 [main] INFO  dev.console -
				Votre choix : 
14:32:39.494 [main] INFO  dev.console -
				Mise à jour d'une pizza
14:32:39.510 [main] INFO  dev.console -
				Veuillez choisir la pizza a modifier

14:32:39.510 [main] INFO  dev.console -
				99 pour abandonner

14:32:41.339 [main] INFO  dev.console -
				Veuillez saisir le code

14:33:05.030 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

14:33:07.345 [main] INFO  dev.console -
				Veuillez saisir le prix

14:33:09.707 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

14:33:14.590 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:33:14.590 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:33:14.599 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:33:14.599 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:33:14.599 [main] INFO  dev.console -
				4. Supprimer une pizza
14:33:14.599 [main] INFO  dev.console -
				99. Sortir 
14:33:14.599 [main] INFO  dev.console -
				Votre choix : 
14:40:30.471 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:40:30.487 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:40:30.487 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:40:30.487 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:40:30.487 [main] INFO  dev.console -
				4. Supprimer une pizza
14:40:30.487 [main] INFO  dev.console -
				99. Sortir 
14:40:30.487 [main] INFO  dev.console -
				Votre choix : 
14:42:43.534 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:42:43.534 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:42:43.534 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:42:43.534 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:42:43.534 [main] INFO  dev.console -
				4. Supprimer une pizza
14:42:43.534 [main] INFO  dev.console -
				99. Sortir 
14:42:43.534 [main] INFO  dev.console -
				Votre choix : 
14:42:45.045 [main] INFO  dev.console -
				Liste des pizzas
14:42:45.059 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
14:42:45.060 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
14:42:45.060 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
14:42:45.060 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
14:42:45.060 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
14:42:45.060 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
14:42:45.060 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
14:42:45.060 [main] INFO  dev.console -
				ROC -> Rocher(13.0 €) Sans Viande
14:42:45.060 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
14:42:45.060 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:42:45.060 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:42:45.060 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:42:45.060 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:42:45.060 [main] INFO  dev.console -
				4. Supprimer une pizza
14:42:45.060 [main] INFO  dev.console -
				99. Sortir 
14:42:45.060 [main] INFO  dev.console -
				Votre choix : 
14:42:56.262 [main] INFO  dev.console -
				Suppression d'une pizza
14:42:56.265 [main] INFO  dev.console -
				Veuillez choisir la pizza a modifier

14:42:56.265 [main] INFO  dev.console -
				99 pour abandonner

14:43:01.029 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:43:01.029 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:43:01.029 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:43:01.029 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:43:01.029 [main] INFO  dev.console -
				4. Supprimer une pizza
14:43:01.029 [main] INFO  dev.console -
				99. Sortir 
14:43:01.029 [main] INFO  dev.console -
				Votre choix : 
14:43:50.864 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:43:50.864 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:43:50.864 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:43:50.864 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:43:50.864 [main] INFO  dev.console -
				4. Supprimer une pizza
14:43:50.864 [main] INFO  dev.console -
				99. Sortir 
14:43:50.864 [main] INFO  dev.console -
				Votre choix : 
14:43:52.509 [main] INFO  dev.console -
				Liste des pizzas
14:43:52.515 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
14:43:52.516 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
14:43:52.516 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
14:43:52.516 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
14:43:52.516 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
14:43:52.516 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
14:43:52.516 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
14:43:52.516 [main] INFO  dev.console -
				ROC -> Rocher(13.0 €) Sans Viande
14:43:52.516 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
14:43:52.516 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:43:52.516 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:43:52.516 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:43:52.516 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:43:52.516 [main] INFO  dev.console -
				4. Supprimer une pizza
14:43:52.516 [main] INFO  dev.console -
				99. Sortir 
14:43:52.516 [main] INFO  dev.console -
				Votre choix : 
14:43:56.007 [main] INFO  dev.console -
				Suppression d'une pizza
14:43:56.009 [main] INFO  dev.console -
				Veuillez entrer le code de la pizza à supprimer

14:43:56.009 [main] INFO  dev.console -
				99 pour abandonner

14:43:59.247 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:43:59.247 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:43:59.262 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:43:59.262 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:43:59.262 [main] INFO  dev.console -
				4. Supprimer une pizza
14:43:59.262 [main] INFO  dev.console -
				99. Sortir 
14:43:59.262 [main] INFO  dev.console -
				Votre choix : 
14:44:00.567 [main] INFO  dev.console -
				Liste des pizzas
14:44:00.577 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
14:44:00.577 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
14:44:00.577 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
14:44:00.577 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
14:44:00.577 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
14:44:00.577 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
14:44:00.577 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
14:44:00.577 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
14:44:00.577 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
14:44:00.577 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
14:44:00.577 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
14:44:00.577 [main] INFO  dev.console -
				3. Mettre à jour une pizza
14:44:00.577 [main] INFO  dev.console -
				4. Supprimer une pizza
14:44:00.577 [main] INFO  dev.console -
				99. Sortir 
14:44:00.578 [main] INFO  dev.console -
				Votre choix : 
14:44:06.797 [main] INFO  dev.console -
				Au revoir :(
16:14:20.730 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:14:20.730 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:14:20.730 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:14:20.730 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:14:20.730 [main] INFO  dev.console -
				4. Supprimer une pizza
16:14:20.730 [main] INFO  dev.console -
				99. Sortir 
16:14:20.730 [main] INFO  dev.console -
				Votre choix : 
16:14:23.236 [main] INFO  dev.console -
				Liste des pizzas
16:14:23.251 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
16:14:23.252 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
16:14:23.252 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
16:14:23.252 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
16:14:23.252 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
16:14:23.252 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
16:14:23.252 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
16:14:23.252 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
16:14:23.252 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:14:23.252 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:14:23.252 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:14:23.252 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:14:23.252 [main] INFO  dev.console -
				4. Supprimer une pizza
16:14:23.252 [main] INFO  dev.console -
				99. Sortir 
16:14:23.252 [main] INFO  dev.console -
				Votre choix : 
16:29:13.620 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:29:13.622 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:29:13.622 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:29:13.622 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:29:13.622 [main] INFO  dev.console -
				4. Supprimer une pizza
16:29:13.622 [main] INFO  dev.console -
				99. Sortir 
16:29:13.622 [main] INFO  dev.console -
				Votre choix : 
16:30:03.204 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:30:03.220 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:30:03.220 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:30:03.220 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:30:03.220 [main] INFO  dev.console -
				4. Supprimer une pizza
16:30:03.220 [main] INFO  dev.console -
				99. Sortir 
16:30:03.220 [main] INFO  dev.console -
				Votre choix : 
16:32:47.064 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:32:47.064 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:32:47.064 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:32:47.064 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:32:47.064 [main] INFO  dev.console -
				4. Supprimer une pizza
16:32:47.064 [main] INFO  dev.console -
				99. Sortir 
16:32:47.064 [main] INFO  dev.console -
				Votre choix : 
16:32:49.186 [main] INFO  dev.console -
				Liste des pizzas
16:32:49.192 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
16:32:49.192 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
16:32:49.192 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
16:32:49.192 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
16:32:49.192 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
16:32:49.192 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
16:32:49.192 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
16:32:49.192 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
16:32:49.192 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:32:49.192 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:32:49.192 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:32:49.192 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:32:49.192 [main] INFO  dev.console -
				4. Supprimer une pizza
16:32:49.192 [main] INFO  dev.console -
				99. Sortir 
16:32:49.192 [main] INFO  dev.console -
				Votre choix : 
16:38:27.343 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:38:27.353 [main] INFO  dev.console -
				Veuillez saisir le code

16:38:29.440 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:38:31.294 [main] INFO  dev.console -
				Veuillez saisir le prix

16:38:33.033 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:38:34.966 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:38:34.966 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:38:34.966 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:38:34.966 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:38:34.966 [main] INFO  dev.console -
				4. Supprimer une pizza
16:38:34.966 [main] INFO  dev.console -
				99. Sortir 
16:38:34.966 [main] INFO  dev.console -
				Votre choix : 
16:40:57.958 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:40:57.958 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:40:57.958 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:40:57.958 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:40:57.958 [main] INFO  dev.console -
				4. Supprimer une pizza
16:40:57.958 [main] INFO  dev.console -
				99. Sortir 
16:40:57.958 [main] INFO  dev.console -
				Votre choix : 
16:41:00.013 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:41:00.013 [main] INFO  dev.console -
				Veuillez saisir le code

16:41:01.604 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:41:04.630 [main] INFO  dev.console -
				Veuillez saisir le prix

16:41:07.633 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:41:10.198 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:41:10.206 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:41:10.206 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:41:10.206 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:41:10.206 [main] INFO  dev.console -
				4. Supprimer une pizza
16:41:10.206 [main] INFO  dev.console -
				99. Sortir 
16:41:10.206 [main] INFO  dev.console -
				Votre choix : 
16:41:12.802 [main] INFO  dev.console -
				Liste des pizzas
16:41:12.802 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:41:12.802 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:41:12.802 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:41:12.802 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:41:12.802 [main] INFO  dev.console -
				4. Supprimer une pizza
16:41:12.802 [main] INFO  dev.console -
				99. Sortir 
16:41:12.802 [main] INFO  dev.console -
				Votre choix : 
16:41:43.346 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:41:43.346 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:41:43.346 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:41:43.346 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:41:43.346 [main] INFO  dev.console -
				4. Supprimer une pizza
16:41:43.346 [main] INFO  dev.console -
				99. Sortir 
16:41:43.346 [main] INFO  dev.console -
				Votre choix : 
16:41:44.509 [main] INFO  dev.console -
				Liste des pizzas
16:41:44.517 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
16:41:44.517 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
16:41:44.517 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
16:41:44.517 [main] INFO  dev.console -
				KEB -> Kebab(13.0 €) Viande
16:41:44.517 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
16:41:44.517 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
16:41:44.517 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
16:41:44.517 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
16:41:44.517 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
16:41:44.517 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:41:44.517 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:41:44.517 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:41:44.517 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:41:44.518 [main] INFO  dev.console -
				4. Supprimer une pizza
16:41:44.518 [main] INFO  dev.console -
				99. Sortir 
16:41:44.518 [main] INFO  dev.console -
				Votre choix : 
16:41:48.723 [main] INFO  dev.console -
				Suppression d'une pizza
16:41:48.728 [main] INFO  dev.console -
				Veuillez entrer le code de la pizza à supprimer

16:41:48.728 [main] INFO  dev.console -
				99 pour abandonner

16:41:50.436 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:41:50.441 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:41:50.441 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:41:50.441 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:41:50.441 [main] INFO  dev.console -
				4. Supprimer une pizza
16:41:50.441 [main] INFO  dev.console -
				99. Sortir 
16:41:50.441 [main] INFO  dev.console -
				Votre choix : 
16:41:52.808 [main] INFO  dev.console -
				Liste des pizzas
16:41:52.819 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
16:41:52.819 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
16:41:52.819 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
16:41:52.819 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
16:41:52.819 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
16:41:52.819 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
16:41:52.819 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
16:41:52.819 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
16:41:52.819 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:41:52.819 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:41:52.819 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:41:52.819 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:41:52.819 [main] INFO  dev.console -
				4. Supprimer une pizza
16:41:52.819 [main] INFO  dev.console -
				99. Sortir 
16:41:52.819 [main] INFO  dev.console -
				Votre choix : 
16:43:24.815 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:43:24.824 [main] INFO  dev.console -
				Veuillez saisir le code

16:43:27.004 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:43:28.641 [main] INFO  dev.console -
				Veuillez saisir le prix

16:43:30.143 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:43:32.488 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:43:32.488 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:43:32.490 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:43:32.490 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:43:32.490 [main] INFO  dev.console -
				4. Supprimer une pizza
16:43:32.490 [main] INFO  dev.console -
				99. Sortir 
16:43:32.490 [main] INFO  dev.console -
				Votre choix : 
16:43:35.545 [main] INFO  dev.console -
				Liste des pizzas
16:43:35.545 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
16:43:35.553 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
16:43:35.553 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
16:43:35.553 [main] INFO  dev.console -
				keb -> kebab(12.0 €) Viande
16:43:35.553 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
16:43:35.553 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
16:43:35.553 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
16:43:35.553 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
16:43:35.553 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
16:43:35.553 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:43:35.553 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:43:35.553 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:43:35.553 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:43:35.553 [main] INFO  dev.console -
				4. Supprimer une pizza
16:43:35.553 [main] INFO  dev.console -
				99. Sortir 
16:43:35.554 [main] INFO  dev.console -
				Votre choix : 
16:43:43.278 [main] INFO  dev.console -
				Suppression d'une pizza
16:43:43.287 [main] INFO  dev.console -
				Veuillez entrer le code de la pizza à supprimer

16:43:43.287 [main] INFO  dev.console -
				99 pour abandonner

16:43:44.155 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:43:44.155 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:43:44.155 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:43:44.155 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:43:44.155 [main] INFO  dev.console -
				4. Supprimer une pizza
16:43:44.155 [main] INFO  dev.console -
				99. Sortir 
16:43:44.155 [main] INFO  dev.console -
				Votre choix : 
16:43:49.856 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:43:49.871 [main] INFO  dev.console -
				Veuillez saisir le code

16:43:52.494 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:43:54.433 [main] INFO  dev.console -
				Veuillez saisir le prix

16:43:55.621 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:49:09.863 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:49:09.879 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:49:09.879 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:49:09.879 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:49:09.879 [main] INFO  dev.console -
				4. Supprimer une pizza
16:49:09.879 [main] INFO  dev.console -
				99. Sortir 
16:49:09.879 [main] INFO  dev.console -
				Votre choix : 
16:49:11.416 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:49:11.430 [main] INFO  dev.console -
				Veuillez saisir le code

16:49:12.979 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:49:15.496 [main] INFO  dev.console -
				Veuillez saisir le prix

16:49:17.175 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:49:20.947 [main] INFO  dev.console -
				Votre catégorie ne peut être que : VIANDE, SANS_VIANDE ou POISSON !
16:49:35.540 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:49:35.540 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:49:35.540 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:49:35.540 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:49:35.540 [main] INFO  dev.console -
				4. Supprimer une pizza
16:49:35.540 [main] INFO  dev.console -
				99. Sortir 
16:49:35.540 [main] INFO  dev.console -
				Votre choix : 
16:49:36.712 [main] INFO  dev.console -
				Liste des pizzas
16:49:36.720 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
16:49:36.720 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
16:49:36.720 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
16:49:36.720 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
16:49:36.720 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
16:49:36.720 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
16:49:36.720 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
16:49:36.720 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
16:49:36.720 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:49:36.720 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:49:36.720 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:49:36.720 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:49:36.720 [main] INFO  dev.console -
				4. Supprimer une pizza
16:49:36.720 [main] INFO  dev.console -
				99. Sortir 
16:49:36.720 [main] INFO  dev.console -
				Votre choix : 
16:49:46.995 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:49:47.005 [main] INFO  dev.console -
				Veuillez saisir le code

16:49:48.201 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:49:51.800 [main] INFO  dev.console -
				Veuillez saisir le prix

16:49:56.345 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:49:56.345 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:49:56.345 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:49:56.345 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:49:56.345 [main] INFO  dev.console -
				4. Supprimer une pizza
16:49:56.345 [main] INFO  dev.console -
				99. Sortir 
16:49:56.345 [main] INFO  dev.console -
				Votre choix : 
16:49:58.648 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:49:58.653 [main] INFO  dev.console -
				Veuillez saisir le code

16:50:00.662 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:50:02.465 [main] INFO  dev.console -
				Veuillez saisir le prix

16:50:04.165 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:50:07.819 [main] INFO  dev.console -
				Votre catégorie ne peut être que : VIANDE, SANS_VIANDE ou POISSON !
16:51:19.707 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:51:19.707 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:51:19.707 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:51:19.707 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:51:19.707 [main] INFO  dev.console -
				4. Supprimer une pizza
16:51:19.707 [main] INFO  dev.console -
				99. Sortir 
16:51:19.707 [main] INFO  dev.console -
				Votre choix : 
16:51:21.410 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:51:21.421 [main] INFO  dev.console -
				Veuillez saisir le code

16:51:22.834 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:51:24.524 [main] INFO  dev.console -
				Veuillez saisir le prix

16:51:26.338 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:51:28.160 [main] INFO  dev.console -
				Votre catégorie ne peut être que : VIANDE, SANS_VIANDE ou POISSON !
16:51:56.464 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:51:56.464 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:51:56.464 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:51:56.464 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:51:56.464 [main] INFO  dev.console -
				4. Supprimer une pizza
16:51:56.464 [main] INFO  dev.console -
				99. Sortir 
16:51:56.464 [main] INFO  dev.console -
				Votre choix : 
16:53:08.596 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:53:08.612 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:53:08.612 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:53:08.612 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:53:08.612 [main] INFO  dev.console -
				4. Supprimer une pizza
16:53:08.612 [main] INFO  dev.console -
				99. Sortir 
16:53:08.612 [main] INFO  dev.console -
				Votre choix : 
16:53:13.610 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:53:13.620 [main] INFO  dev.console -
				Veuillez saisir le code

16:53:16.290 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:53:18.495 [main] INFO  dev.console -
				Veuillez saisir le prix

16:53:20.468 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:53:22.969 [main] INFO  dev.console -
				Votre catégorie ne peut être que : VIANDE, SANS_VIANDE ou POISSON !
16:53:22.972 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:53:22.972 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:53:22.972 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:53:22.972 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:53:22.972 [main] INFO  dev.console -
				4. Supprimer une pizza
16:53:22.972 [main] INFO  dev.console -
				99. Sortir 
16:53:22.972 [main] INFO  dev.console -
				Votre choix : 
16:53:27.144 [main] INFO  dev.console -
				Liste des pizzas
16:53:27.153 [main] INFO  dev.console -
				CAN -> La cannibale(12.5 €) Viande
16:53:27.153 [main] INFO  dev.console -
				FRO -> La 4 fromages(12.0 €) Sans Viande
16:53:27.153 [main] INFO  dev.console -
				IND -> L'indienne(14.5 €) Viande
16:53:27.153 [main] INFO  dev.console -
				MAR -> Margherita(14.0 €) Sans Viande
16:53:27.153 [main] INFO  dev.console -
				ORI -> L'orientale(13.5 €) Viande
16:53:27.153 [main] INFO  dev.console -
				PEP -> Peperoni(12.5 €) Viande
16:53:27.153 [main] INFO  dev.console -
				REIN -> La Reine(11.5 €) Viande
16:53:27.153 [main] INFO  dev.console -
				SAV -> La savoyarde(13.0 €) Viande
16:53:27.153 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:53:27.153 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:53:27.153 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:53:27.154 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:53:27.154 [main] INFO  dev.console -
				4. Supprimer une pizza
16:53:27.154 [main] INFO  dev.console -
				99. Sortir 
16:53:27.154 [main] INFO  dev.console -
				Votre choix : 
16:42:00.299 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:42:00.343 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:42:00.392 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:42:00.392 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pu_pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_essai]
16:42:00.392 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Excluding from consideration due to name mis-match
16:42:00.392 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Found no matching persistence units
16:42:19.309 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:42:19.354 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:42:19.404 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:42:19.405 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pu_pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_pizza]
16:42:19.406 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pu_pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:42:19.412 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pu_pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY15/Documents/workspace-sts-3.8.3.RELEASE/pizzeria-console-objet/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: evKSd8umx2tTuqh6oGK
		javax.persistence.jdbc.url: jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw
		hibernate.show_sql: false
		javax.persistence.schema-generation.database.action: drop-and-create
		javax.persistence.jdbc.user: usayprwpagsxilld]
16:42:19.419 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:42:19.421 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:42:19.423 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:42:19.423 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:42:19.477 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
16:42:19.478 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
16:42:19.479 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
16:42:19.489 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:42:19.506 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:42:19.513 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:42:19.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@6646153
16:42:19.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@6646153
16:42:19.591 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6646153
16:42:19.592 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@657c8ad9
16:42:19.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ad851c9
16:42:19.593 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@b62fe6d
16:42:19.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@7c417213
16:42:19.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@7c417213
16:42:19.594 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c417213
16:42:19.595 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@60611244
16:42:19.595 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@60611244
16:42:19.596 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60611244
16:42:19.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@fdefd3f
16:42:19.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@fdefd3f
16:42:19.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fdefd3f
16:42:19.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@7a52f2a2
16:42:19.597 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@7a52f2a2
16:42:19.598 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a52f2a2
16:42:19.599 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@6e75aa0d
16:42:19.599 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@6e75aa0d
16:42:19.599 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e75aa0d
16:42:19.600 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@4b44655e
16:42:19.600 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@4b44655e
16:42:19.600 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b44655e
16:42:19.601 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@6b4a4e18
16:42:19.602 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@6b4a4e18
16:42:19.602 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b4a4e18
16:42:19.603 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a955565
16:42:19.604 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a955565
16:42:19.605 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@70be0a2b
16:42:19.605 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@70be0a2b
16:42:19.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@1e730495
16:42:19.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@1e730495
16:42:19.606 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2a32de6c
16:42:19.607 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23529fee
16:42:19.608 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@5bfa9431
16:42:19.608 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@5bfa9431
16:42:19.609 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@3c72f59f
16:42:19.609 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c72f59f
16:42:19.610 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@3901d134
16:42:19.610 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3901d134
16:42:19.612 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@65d6b83b
16:42:19.612 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65d6b83b
16:42:19.612 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65d6b83b
16:42:19.613 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79efed2d
16:42:19.614 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@4278a03f
16:42:19.614 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4278a03f
16:42:19.614 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4278a03f
16:42:19.614 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@124c278f
16:42:19.615 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@6973bf95
16:42:19.615 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6973bf95
16:42:19.616 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@7a4ccb53
16:42:19.616 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a4ccb53
16:42:19.617 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@45b9a632
16:42:19.617 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45b9a632
16:42:19.617 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@54c562f7
16:42:19.618 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54c562f7
16:42:19.619 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bbf180e
16:42:19.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bbf180e
16:42:19.620 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@419c5f1a
16:42:19.621 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@6193932a
16:42:19.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@6193932a
16:42:19.622 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@6193932a
16:42:19.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:42:19.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:42:19.623 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:42:19.624 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@1677d1
16:42:19.625 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@75329a49
16:42:19.625 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@75329a49
16:42:19.625 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@75329a49
16:42:19.626 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b6faea6
16:42:19.626 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b6faea6
16:42:19.626 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b6faea6
16:42:19.627 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@56528192
16:42:19.628 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@1f3f4916
16:42:19.632 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@460d0a57
16:42:19.632 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@460d0a57
16:42:19.632 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3aefe5e5
16:42:19.636 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@769f71a9
16:42:19.636 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@769f71a9
16:42:19.639 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@1622f1b
16:42:19.639 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1622f1b
16:42:19.639 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70e8f8e
16:42:19.640 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@29626d54
16:42:19.641 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@4b0b0854
16:42:19.643 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@63355449
16:42:19.643 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@63355449
16:42:19.644 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48ae9b55
16:42:19.644 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1700915
16:42:19.644 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21de60b4
16:42:19.644 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c267ef4
16:42:19.644 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@30ee2816
16:42:19.644 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31d7b7bf
16:42:19.644 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@635eaaf1
16:42:19.644 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c30a9b0
16:42:19.652 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:42:19.658 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw]
16:42:19.658 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=usayprwpagsxilld, password=evKSd8umx2tTuqh6oGK}
16:42:19.658 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
16:42:19.660 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
16:42:19.660 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
16:42:20.005 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 5.5.28-0ubuntu0.12.04.3-log
      major : 5
      minor : 5
16:42:20.006 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.41 ( Revision: 83c6dc41b96809df81444362933043b20a1d49d5 )
      major : 5
      minor : 1
16:42:20.006 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
16:42:20.038 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:42:20.057 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:42:20.075 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				JDBC driver metadata reported database stores quoted identifiers in more than one case
16:42:20.077 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:42:20.103 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@3541cb24
16:42:20.103 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3541cb24
16:42:20.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@34f7cfd9
16:42:20.118 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34f7cfd9
16:42:20.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e6ef8ad
16:42:20.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e6ef8ad
16:42:20.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@747edf66
16:42:20.119 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@747edf66
16:42:20.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74455848
16:42:20.120 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74455848
16:42:20.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3738449f
16:42:20.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3738449f
16:42:20.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c333c60
16:42:20.121 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c333c60
16:42:20.123 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44821a96
16:42:20.123 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44821a96
16:42:20.160 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:42:20.160 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:42:20.161 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:42:20.161 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:42:20.161 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:42:20.162 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:42:20.163 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:42:20.163 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:42:20.164 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:42:20.164 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:42:20.165 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:42:20.165 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:42:20.165 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:42:20.166 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:42:20.194 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:42:20.220 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
16:42:20.234 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:42:20.238 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
16:42:20.241 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table PIZZA
16:42:20.260 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:42:20.262 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
16:42:20.263 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
16:42:20.264 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
16:42:20.266 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
16:42:20.270 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=CATEGORY, insertable=true, updatable=true, unique=false}
16:42:20.270 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
16:42:20.270 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:categorie]
16:42:20.272 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
16:42:20.272 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
16:42:20.272 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=CODE, insertable=true, updatable=true, unique=false}
16:42:20.273 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
16:42:20.273 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
16:42:20.273 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
16:42:20.273 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
16:42:20.273 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=PIZZA_NAME, insertable=true, updatable=true, unique=false}
16:42:20.273 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property nom with lazy=false
16:42:20.273 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:nom]
16:42:20.273 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for nom
16:42:20.274 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property nom
16:42:20.274 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=PRICE, insertable=true, updatable=true, unique=false}
16:42:20.274 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
16:42:20.274 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
16:42:20.274 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
16:42:20.274 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
16:42:20.275 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
16:42:20.275 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
16:42:20.276 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
16:42:20.276 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for nom
16:42:20.276 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
16:42:20.277 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
16:42:20.303 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
16:42:20.304 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
16:42:20.304 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
16:42:20.304 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
16:42:20.304 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
16:42:20.304 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
16:42:20.304 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
16:42:20.304 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:42:20.304 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2a225dd7
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
16:42:20.305 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
16:42:20.306 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
16:42:20.346 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
16:42:20.347 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {hibernate.connection.password=evKSd8umx2tTuqh6oGK, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.151-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_151\bin, hibernate.connection.username=usayprwpagsxilld, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7e5c856f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY15\Documents\workspace-sts-3.8.3.RELEASE\pizzeria-console-objet, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=usayprwpagsxilld, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_151\lib\endorsed, java.io.tmpdir=C:\Users\ETY15\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=evKSd8umx2tTuqh6oGK, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw, java.library.path=C:\Program Files\Java\jre1.8.0_151\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_151/bin/server;C:/Program Files/Java/jre1.8.0_151/bin;C:/Program Files/Java/jre1.8.0_151/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_151\bin;C:\Program Files\Git\cmd;C:\apache-maven-3.5.2\bin;C:\Users\ETY15\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_151;C:\apache-maven-3.5.2;;C:\Program Files\sts-bundle\sts-3.8.3.RELEASE;;., javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY15, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=ETY15, java.class.path=C:\Users\ETY15\Documents\workspace-sts-3.8.3.RELEASE\pizzeria-console-objet\target\classes;C:\Users\ETY15\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY15\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY15\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY15\.m2\repository\mysql\mysql-connector-java\5.1.41\mysql-connector-java-5.1.41.jar;C:\Users\ETY15\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY15\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY15\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY15\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY15\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY15\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY15\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY15\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY15\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY15\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-java8\5.0.12.Final\hibernate-java8-5.0.12.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_151, hibernate.connection.url=jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=C:\Program Files\Java\jre1.8.0_151\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_151\lib\resources.jar;C:\Program Files\Java\jre1.8.0_151\lib\rt.jar;C:\Program Files\Java\jre1.8.0_151\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_151\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_151\lib\jce.jar;C:\Program Files\Java\jre1.8.0_151\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_151\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_151\classes, java.vendor=Oracle Corporation, javax.persistence.schema-generation.database.action=drop-and-create, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:42:20.358 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
16:42:20.362 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:42:20.396 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:42:20.396 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:42:20.404 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:42:20.404 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:42:20.445 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.Pizza (class must be instantiated by Interceptor)
16:42:20.475 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
16:42:20.475 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from PIZZA where id =?
16:42:20.475 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.CATEGORY as CATEGORY2_0_, pizza_.CODE as CODE3_0_, pizza_.PIZZA_NAME as PIZZA_NA4_0_, pizza_.PRICE as PRICE5_0_ from PIZZA pizza_ where pizza_.id=?
16:42:20.475 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE, id) values (?, ?, ?, ?, ?)
16:42:20.475 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update PIZZA set CATEGORY=?, CODE=?, PIZZA_NAME=?, PRICE=? where id=?
16:42:20.475 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from PIZZA where id=?
16:42:20.476 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE) values (?, ?, ?, ?)
16:42:20.490 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@626c44e7]
16:42:20.491 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.491 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.491 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.491 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.491 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.500 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.503 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.505 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:42:20.506 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f7234e]
16:42:20.506 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.506 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.506 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.506 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.506 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.506 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.506 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.506 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:42:20.506 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23bff419]
16:42:20.507 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.507 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.507 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.507 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.507 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.507 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.507 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.507 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:42:20.507 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e3a2b2]
16:42:20.507 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.507 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.507 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.507 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.507 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.508 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.508 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.508 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:42:20.508 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c550889]
16:42:20.508 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.508 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.508 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.508 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.508 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.508 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.509 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.509 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:42:20.509 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44040454]
16:42:20.509 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.509 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.509 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.509 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.509 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.509 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.509 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.509 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:42:20.509 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18bc345]
16:42:20.509 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.509 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.510 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.510 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.510 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.510 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.510 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.510 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? lock in share mode
16:42:20.510 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26bab2f1]
16:42:20.511 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.511 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.511 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.511 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.511 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.511 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.511 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.511 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:42:20.512 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ead359]
16:42:20.512 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.512 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.512 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.512 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.512 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.512 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.512 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.513 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:42:20.513 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180da663]
16:42:20.513 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.513 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.513 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.513 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.513 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.513 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.513 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.514 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:42:20.514 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
16:42:20.514 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:42:20.514 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:42:20.514 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:42:20.514 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:42:20.514 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:42:20.514 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:42:20.514 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:42:20.515 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:42:20.528 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:42:20.529 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:42:20.529 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
16:42:20.543 [main] DEBUG org.hibernate.SQL -
				drop table if exists PIZZA
16:42:20.639 [main] DEBUG org.hibernate.SQL -
				create table PIZZA (id integer not null auto_increment, CATEGORY varchar(255), CODE varchar(255), PIZZA_NAME varchar(255), PRICE double precision, primary key (id))
16:42:20.882 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl -
				HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@32811494'
16:42:20.907 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
16:42:20.909 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:42:20.915 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:42:20.918 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
16:42:20.918 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
16:42:20.923 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e98770d
16:42:20.927 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 82787ff6-311e-4a17-a43a-45e5fee6f897 (<unnamed>)
16:42:20.927 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
16:42:20.968 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4ee37ca3
16:42:20.968 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pu_pizza 
16:42:21.006 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
16:42:21.013 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:42:21.013 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:42:21.013 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:42:21.013 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:42:21.013 [main] INFO  dev.console -
				4. Supprimer une pizza
16:42:21.013 [main] INFO  dev.console -
				99. Sortir 
16:42:21.013 [main] INFO  dev.console -
				Votre choix : 
16:42:24.078 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@38f57b3d
16:42:24.078 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
16:42:24.111 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: from pizza
16:42:24.118 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'pizza'

16:42:24.118 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:42:24.143 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
16:42:49.996 [pool-1-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Connection pool now considered primed; min-size will be maintained
16:43:18.882 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:43:18.922 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:43:18.974 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:43:18.974 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pu_pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_pizza]
16:43:18.976 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pu_pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:43:18.981 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pu_pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY15/Documents/workspace-sts-3.8.3.RELEASE/pizzeria-console-objet/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: evKSd8umx2tTuqh6oGK
		javax.persistence.jdbc.url: jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw
		hibernate.show_sql: false
		javax.persistence.schema-generation.database.action: drop-and-create
		javax.persistence.jdbc.user: usayprwpagsxilld]
16:43:18.991 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:43:18.992 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:43:18.994 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:43:18.994 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:43:19.047 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
16:43:19.048 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
16:43:19.049 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
16:43:19.057 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:43:19.074 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:43:19.081 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:43:19.160 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@6646153
16:43:19.160 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@6646153
16:43:19.160 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6646153
16:43:19.161 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@657c8ad9
16:43:19.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ad851c9
16:43:19.162 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@b62fe6d
16:43:19.164 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@7c417213
16:43:19.164 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@7c417213
16:43:19.164 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c417213
16:43:19.165 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@60611244
16:43:19.165 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@60611244
16:43:19.165 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60611244
16:43:19.166 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@fdefd3f
16:43:19.166 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@fdefd3f
16:43:19.167 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fdefd3f
16:43:19.168 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@7a52f2a2
16:43:19.168 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@7a52f2a2
16:43:19.168 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a52f2a2
16:43:19.169 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@6e75aa0d
16:43:19.169 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@6e75aa0d
16:43:19.169 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e75aa0d
16:43:19.171 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@4b44655e
16:43:19.171 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@4b44655e
16:43:19.171 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b44655e
16:43:19.172 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@6b4a4e18
16:43:19.172 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@6b4a4e18
16:43:19.172 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b4a4e18
16:43:19.174 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a955565
16:43:19.174 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a955565
16:43:19.175 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@70be0a2b
16:43:19.175 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@70be0a2b
16:43:19.176 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@1e730495
16:43:19.176 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@1e730495
16:43:19.177 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2a32de6c
16:43:19.177 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23529fee
16:43:19.178 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@5bfa9431
16:43:19.178 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@5bfa9431
16:43:19.179 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@3c72f59f
16:43:19.180 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c72f59f
16:43:19.181 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@3901d134
16:43:19.181 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3901d134
16:43:19.182 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@65d6b83b
16:43:19.182 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65d6b83b
16:43:19.182 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65d6b83b
16:43:19.183 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79efed2d
16:43:19.184 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@4278a03f
16:43:19.184 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4278a03f
16:43:19.184 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4278a03f
16:43:19.185 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@124c278f
16:43:19.185 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@6973bf95
16:43:19.185 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6973bf95
16:43:19.186 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@7a4ccb53
16:43:19.186 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a4ccb53
16:43:19.187 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@45b9a632
16:43:19.187 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45b9a632
16:43:19.188 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@54c562f7
16:43:19.188 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54c562f7
16:43:19.189 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bbf180e
16:43:19.190 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bbf180e
16:43:19.190 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@419c5f1a
16:43:19.191 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@6193932a
16:43:19.192 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@6193932a
16:43:19.192 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@6193932a
16:43:19.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:43:19.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:43:19.193 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:43:19.194 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@1677d1
16:43:19.195 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@75329a49
16:43:19.195 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@75329a49
16:43:19.195 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@75329a49
16:43:19.197 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b6faea6
16:43:19.197 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b6faea6
16:43:19.197 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b6faea6
16:43:19.198 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@56528192
16:43:19.199 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@1f3f4916
16:43:19.203 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@460d0a57
16:43:19.203 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@460d0a57
16:43:19.204 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3aefe5e5
16:43:19.207 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@769f71a9
16:43:19.207 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@769f71a9
16:43:19.210 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@1622f1b
16:43:19.210 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1622f1b
16:43:19.210 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70e8f8e
16:43:19.211 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@29626d54
16:43:19.212 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@4b0b0854
16:43:19.214 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@63355449
16:43:19.214 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@63355449
16:43:19.214 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48ae9b55
16:43:19.214 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1700915
16:43:19.214 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21de60b4
16:43:19.215 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c267ef4
16:43:19.215 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@30ee2816
16:43:19.215 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31d7b7bf
16:43:19.215 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@635eaaf1
16:43:19.215 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c30a9b0
16:43:19.223 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:43:19.229 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw]
16:43:19.229 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=usayprwpagsxilld, password=evKSd8umx2tTuqh6oGK}
16:43:19.230 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
16:43:19.232 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
16:43:19.232 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
16:43:19.575 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 5.5.28-0ubuntu0.12.04.3-log
      major : 5
      minor : 5
16:43:19.576 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.41 ( Revision: 83c6dc41b96809df81444362933043b20a1d49d5 )
      major : 5
      minor : 1
16:43:19.577 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
16:43:19.613 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:43:19.636 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:43:19.661 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				JDBC driver metadata reported database stores quoted identifiers in more than one case
16:43:19.663 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:43:19.690 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@3541cb24
16:43:19.690 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3541cb24
16:43:19.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@34f7cfd9
16:43:19.707 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34f7cfd9
16:43:19.708 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e6ef8ad
16:43:19.708 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e6ef8ad
16:43:19.708 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@747edf66
16:43:19.708 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@747edf66
16:43:19.709 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74455848
16:43:19.709 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74455848
16:43:19.710 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3738449f
16:43:19.710 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3738449f
16:43:19.710 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c333c60
16:43:19.710 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c333c60
16:43:19.712 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44821a96
16:43:19.712 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44821a96
16:43:19.749 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:43:19.750 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:43:19.751 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:43:19.751 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:43:19.751 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:43:19.752 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:43:19.753 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:43:19.753 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:43:19.754 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:43:19.754 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:43:19.755 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:43:19.755 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:43:19.755 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:43:19.756 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:43:19.785 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:43:19.811 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
16:43:19.825 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:43:19.829 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
16:43:19.831 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table PIZZA
16:43:19.851 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:43:19.853 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
16:43:19.854 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
16:43:19.855 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
16:43:19.856 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
16:43:19.861 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=CATEGORY, insertable=true, updatable=true, unique=false}
16:43:19.861 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
16:43:19.861 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:categorie]
16:43:19.862 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
16:43:19.862 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
16:43:19.863 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=CODE, insertable=true, updatable=true, unique=false}
16:43:19.863 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
16:43:19.863 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
16:43:19.863 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
16:43:19.863 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
16:43:19.863 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=PIZZA_NAME, insertable=true, updatable=true, unique=false}
16:43:19.863 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property nom with lazy=false
16:43:19.863 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:nom]
16:43:19.863 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for nom
16:43:19.863 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property nom
16:43:19.863 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=PRICE, insertable=true, updatable=true, unique=false}
16:43:19.864 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
16:43:19.864 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
16:43:19.864 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
16:43:19.864 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
16:43:19.865 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
16:43:19.865 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
16:43:19.866 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
16:43:19.866 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for nom
16:43:19.866 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
16:43:19.867 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
16:43:19.890 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
16:43:19.891 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
16:43:19.891 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
16:43:19.891 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
16:43:19.892 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2a225dd7
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
16:43:19.893 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
16:43:19.937 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
16:43:19.937 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {hibernate.connection.password=evKSd8umx2tTuqh6oGK, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.151-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_151\bin, hibernate.connection.username=usayprwpagsxilld, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7e5c856f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY15\Documents\workspace-sts-3.8.3.RELEASE\pizzeria-console-objet, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=usayprwpagsxilld, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_151\lib\endorsed, java.io.tmpdir=C:\Users\ETY15\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=evKSd8umx2tTuqh6oGK, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw, java.library.path=C:\Program Files\Java\jre1.8.0_151\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_151/bin/server;C:/Program Files/Java/jre1.8.0_151/bin;C:/Program Files/Java/jre1.8.0_151/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_151\bin;C:\Program Files\Git\cmd;C:\apache-maven-3.5.2\bin;C:\Users\ETY15\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_151;C:\apache-maven-3.5.2;;C:\Program Files\sts-bundle\sts-3.8.3.RELEASE;;., javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY15, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=ETY15, java.class.path=C:\Users\ETY15\Documents\workspace-sts-3.8.3.RELEASE\pizzeria-console-objet\target\classes;C:\Users\ETY15\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY15\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY15\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY15\.m2\repository\mysql\mysql-connector-java\5.1.41\mysql-connector-java-5.1.41.jar;C:\Users\ETY15\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY15\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY15\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY15\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY15\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY15\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY15\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY15\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY15\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY15\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-java8\5.0.12.Final\hibernate-java8-5.0.12.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_151, hibernate.connection.url=jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=C:\Program Files\Java\jre1.8.0_151\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_151\lib\resources.jar;C:\Program Files\Java\jre1.8.0_151\lib\rt.jar;C:\Program Files\Java\jre1.8.0_151\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_151\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_151\lib\jce.jar;C:\Program Files\Java\jre1.8.0_151\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_151\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_151\classes, java.vendor=Oracle Corporation, javax.persistence.schema-generation.database.action=drop-and-create, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:43:19.949 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
16:43:19.952 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:43:19.988 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:43:19.988 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:43:19.997 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:43:19.997 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:43:20.001 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.Pizza (class must be instantiated by Interceptor)
16:43:20.069 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
16:43:20.069 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from PIZZA where id =?
16:43:20.069 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.CATEGORY as CATEGORY2_0_, pizza_.CODE as CODE3_0_, pizza_.PIZZA_NAME as PIZZA_NA4_0_, pizza_.PRICE as PRICE5_0_ from PIZZA pizza_ where pizza_.id=?
16:43:20.069 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE, id) values (?, ?, ?, ?, ?)
16:43:20.069 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update PIZZA set CATEGORY=?, CODE=?, PIZZA_NAME=?, PRICE=? where id=?
16:43:20.069 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from PIZZA where id=?
16:43:20.069 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE) values (?, ?, ?, ?)
16:43:20.083 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@626c44e7]
16:43:20.084 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.084 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.084 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.084 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.084 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.093 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.096 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.099 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:43:20.099 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f7234e]
16:43:20.099 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.099 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.099 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.100 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.100 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.100 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.100 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.100 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:43:20.100 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23bff419]
16:43:20.100 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.100 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.100 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.100 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.100 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.101 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.101 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.101 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:43:20.101 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e3a2b2]
16:43:20.101 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.101 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.101 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.101 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.101 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.101 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.101 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.101 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:43:20.102 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c550889]
16:43:20.102 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.102 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.102 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.102 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.102 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.102 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.102 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.102 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:43:20.102 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44040454]
16:43:20.102 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.102 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.102 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.102 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.102 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.103 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.103 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.103 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:43:20.103 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18bc345]
16:43:20.103 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.103 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.103 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.103 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.103 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.104 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.104 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.104 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? lock in share mode
16:43:20.104 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26bab2f1]
16:43:20.104 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.104 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.104 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.104 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.104 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.105 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.105 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.105 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:43:20.105 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ead359]
16:43:20.105 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.105 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.105 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.105 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.105 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.106 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.106 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.106 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:43:20.106 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180da663]
16:43:20.106 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.106 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.106 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.106 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.107 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.107 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.107 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.107 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:43:20.107 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
16:43:20.107 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:43:20.107 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:43:20.107 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:43:20.107 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:43:20.108 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:43:20.108 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:43:20.108 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:43:20.108 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:43:20.122 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:43:20.122 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:43:20.122 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
16:43:20.133 [main] DEBUG org.hibernate.SQL -
				drop table if exists PIZZA
16:43:20.201 [main] DEBUG org.hibernate.SQL -
				create table PIZZA (id integer not null auto_increment, CATEGORY varchar(255), CODE varchar(255), PIZZA_NAME varchar(255), PRICE double precision, primary key (id))
16:43:20.253 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl -
				HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@32811494'
16:43:20.275 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
16:43:20.276 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:43:20.283 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:43:20.286 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
16:43:20.286 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
16:43:20.291 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e98770d
16:43:20.295 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: b8c8434d-2742-42a3-8650-b96208173dae (<unnamed>)
16:43:20.296 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
16:43:20.334 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4ee37ca3
16:43:20.335 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pu_pizza 
16:43:20.377 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
16:43:20.383 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:43:20.383 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:43:20.383 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:43:20.383 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:43:20.383 [main] INFO  dev.console -
				4. Supprimer une pizza
16:43:20.383 [main] INFO  dev.console -
				99. Sortir 
16:43:20.383 [main] INFO  dev.console -
				Votre choix : 
16:43:22.663 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@38f57b3d
16:43:22.663 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
16:43:22.687 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: from fr.pizzeria.model.Pizza
16:43:22.696 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'fr'
                |  |  \-[IDENT] Node: 'pizzeria'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Pizza'

16:43:22.696 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:43:22.718 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
16:43:22.732 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (<no alias>) -> pizza0_
16:43:22.733 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
16:43:22.733 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( FromClause{level=1} PIZZA pizza0_ ) )
16:43:22.739 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				Derived SELECT clause created.
16:43:22.745 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [PIZZA pizza0_]
16:43:22.745 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
16:43:22.745 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PIZZA)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'pizza0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=PIZZA,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'PIZZA pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=PIZZA,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

16:43:22.746 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:43:22.753 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: from fr.pizzeria.model.Pizza
16:43:22.753 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:43:22.753 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:43:22.766 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:43:22.798 [main] INFO  dev.console -
				Liste des pizzas
16:43:22.798 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:43:22.798 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:43:22.798 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:43:22.798 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:43:22.799 [main] INFO  dev.console -
				4. Supprimer une pizza
16:43:22.799 [main] INFO  dev.console -
				99. Sortir 
16:43:22.799 [main] INFO  dev.console -
				Votre choix : 
16:43:25.657 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:43:25.657 [main] INFO  dev.console -
				Veuillez saisir le code

16:43:29.808 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:43:31.680 [main] INFO  dev.console -
				Veuillez saisir le prix

16:43:33.208 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:43:36.209 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				begin
16:43:36.229 [main] DEBUG org.hibernate.engine.spi.ActionQueue -
				Executing identity-insert immediately
16:43:36.230 [main] DEBUG org.hibernate.SQL -
				insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE) values (?, ?, ?, ?)
16:43:36.241 [main] DEBUG o.h.id.IdentifierGeneratorHelper -
				Natively generated identity: 1
16:43:36.241 [main] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl -
				HHH000387: ResultSet's statement was not registered
16:43:36.242 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				committing
16:43:36.243 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Processing flush-time cascades
16:43:36.243 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Dirty checking collections
16:43:36.244 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
16:43:36.244 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
16:43:36.245 [main] DEBUG o.h.internal.util.EntityPrinter -
				Listing entities:
16:43:36.245 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=REI, prix=12.0, id=1, nom=Reine}
16:43:36.261 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:43:36.261 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:43:36.261 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:43:36.261 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:43:36.261 [main] INFO  dev.console -
				4. Supprimer une pizza
16:43:36.261 [main] INFO  dev.console -
				99. Sortir 
16:43:36.261 [main] INFO  dev.console -
				Votre choix : 
16:43:38.256 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:43:38.266 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:43:38.268 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:43:38.269 [main] INFO  dev.console -
				Liste des pizzas
16:43:38.269 [main] INFO  dev.console -
				REI -> Reine(12.0 €) Viande
16:43:38.269 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:43:38.269 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:43:38.269 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:43:38.269 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:43:38.269 [main] INFO  dev.console -
				4. Supprimer une pizza
16:43:38.269 [main] INFO  dev.console -
				99. Sortir 
16:43:38.269 [main] INFO  dev.console -
				Votre choix : 
16:43:44.336 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:43:44.336 [main] INFO  dev.console -
				Veuillez saisir le code

16:43:46.120 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:43:47.688 [main] INFO  dev.console -
				Veuillez saisir le prix

16:43:48.760 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:43:50.528 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				begin
16:43:50.538 [main] DEBUG org.hibernate.engine.spi.ActionQueue -
				Executing identity-insert immediately
16:43:50.538 [main] DEBUG org.hibernate.SQL -
				insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE) values (?, ?, ?, ?)
16:43:50.548 [main] DEBUG o.h.id.IdentifierGeneratorHelper -
				Natively generated identity: 2
16:43:50.548 [main] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl -
				HHH000387: ResultSet's statement was not registered
16:43:50.548 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				committing
16:43:50.548 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Processing flush-time cascades
16:43:50.548 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Dirty checking collections
16:43:50.548 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
16:43:50.548 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
16:43:50.548 [main] DEBUG o.h.internal.util.EntityPrinter -
				Listing entities:
16:43:50.548 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=REI, prix=12.0, id=1, nom=Reine}
16:43:50.548 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=KEB, prix=13.0, id=2, nom=Kebab}
16:43:50.562 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:43:50.562 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:43:50.562 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:43:50.562 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:43:50.562 [main] INFO  dev.console -
				4. Supprimer une pizza
16:43:50.562 [main] INFO  dev.console -
				99. Sortir 
16:43:50.562 [main] INFO  dev.console -
				Votre choix : 
16:43:51.896 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:43:51.906 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:43:51.906 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:43:51.906 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 1
16:43:51.906 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#2]
16:43:51.906 [main] INFO  dev.console -
				Liste des pizzas
16:43:51.906 [main] INFO  dev.console -
				REI -> Reine(12.0 €) Viande
16:43:51.906 [main] INFO  dev.console -
				KEB -> Kebab(13.0 €) Viande
16:43:51.906 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:43:51.907 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:43:51.907 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:43:51.907 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:43:51.907 [main] INFO  dev.console -
				4. Supprimer une pizza
16:43:51.907 [main] INFO  dev.console -
				99. Sortir 
16:43:51.907 [main] INFO  dev.console -
				Votre choix : 
16:45:39.407 [main] INFO  dev.console -
				Mise à jour d'une pizza
16:45:39.408 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:45:39.418 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:45:39.418 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:45:39.418 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 1
16:45:39.418 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#2]
16:45:39.418 [main] INFO  dev.console -
				Veuillez choisir la pizza a modifier

16:45:39.418 [main] INFO  dev.console -
				99 pour abandonner

16:45:42.151 [main] INFO  dev.console -
				Veuillez saisir le code

16:45:46.199 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:45:48.351 [main] INFO  dev.console -
				Veuillez saisir le prix

16:45:49.879 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:45:53.519 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: from fr.pizzeria.model.Pizza WHERE code=:target
16:45:53.523 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'fr'
    |           |  |  \-[IDENT] Node: 'pizzeria'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Pizza'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'code'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'target'

16:45:53.523 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:45:53.523 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
16:45:53.523 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (<no alias>) -> pizza0_
16:45:53.525 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : {synthetic-alias} -> {synthetic-alias}
16:45:53.526 [main] DEBUG o.h.hql.internal.ast.tree.DotNode -
				getDataType() : code -> org.hibernate.type.StringType@1e730495
16:45:53.527 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : {synthetic-alias}.code -> pizza0_.CODE
16:45:53.528 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
16:45:53.529 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( FromClause{level=1} PIZZA pizza0_ ) ( WHERE ( = ( pizza0_.CODE {synthetic-alias} code ) ? ) ) )
16:45:53.529 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				Derived SELECT clause created.
16:45:53.529 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [PIZZA pizza0_]
16:45:53.529 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
16:45:53.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PIZZA)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'pizza0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=PIZZA,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'PIZZA pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=PIZZA,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'pizza0_.CODE' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path={synthetic-alias}.code,tableAlias=pizza0_,className=fr.pizzeria.model.Pizza,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'code' {originalText=code}
          \-[NAMED_PARAM] ParameterNode: '?' {name=target, expectedType=org.hibernate.type.StringType@1e730495}

16:45:53.529 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:45:53.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: from fr.pizzeria.model.Pizza WHERE code=:target
16:45:53.529 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_ where pizza0_.CODE=?
16:45:53.529 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:45:53.532 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_ where pizza0_.CODE=?
16:45:53.543 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:45:53.543 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:45:53.543 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				begin
16:45:53.552 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				committing
16:45:53.552 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Processing flush-time cascades
16:45:53.552 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Dirty checking collections
16:45:53.553 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
16:45:53.553 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
16:45:53.553 [main] DEBUG o.h.internal.util.EntityPrinter -
				Listing entities:
16:45:53.553 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=REI, prix=12.0, id=1, nom=Reine}
16:45:53.553 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=KEB, prix=13.0, id=2, nom=Kebab}
16:45:53.562 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:45:53.562 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:45:53.562 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:45:53.562 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:45:53.562 [main] INFO  dev.console -
				4. Supprimer une pizza
16:45:53.562 [main] INFO  dev.console -
				99. Sortir 
16:45:53.562 [main] INFO  dev.console -
				Votre choix : 
16:45:55.480 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:45:55.489 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:45:55.489 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:45:55.489 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 1
16:45:55.489 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#2]
16:45:55.489 [main] INFO  dev.console -
				Liste des pizzas
16:45:55.489 [main] INFO  dev.console -
				REI -> Reine(12.0 €) Viande
16:45:55.489 [main] INFO  dev.console -
				KEB -> Kebab(13.0 €) Viande
16:45:55.489 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:45:55.489 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:45:55.489 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:45:55.489 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:45:55.489 [main] INFO  dev.console -
				4. Supprimer une pizza
16:45:55.489 [main] INFO  dev.console -
				99. Sortir 
16:45:55.489 [main] INFO  dev.console -
				Votre choix : 
16:46:35.535 [main] INFO  dev.console -
				Suppression d'une pizza
16:46:35.536 [main] INFO  dev.console -
				Veuillez entrer le code de la pizza à supprimer

16:46:35.536 [main] INFO  dev.console -
				99 pour abandonner

16:46:37.967 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_ where pizza0_.CODE=?
16:46:37.977 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:46:37.977 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#2]
16:46:37.977 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				begin
16:46:37.989 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				committing
16:46:37.989 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Processing flush-time cascades
16:46:37.989 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Dirty checking collections
16:46:37.989 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 insertions, 0 updates, 1 deletions to 2 objects
16:46:37.989 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
16:46:37.989 [main] DEBUG o.h.internal.util.EntityPrinter -
				Listing entities:
16:46:37.989 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=REI, prix=12.0, id=1, nom=Reine}
16:46:37.989 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=KEB, prix=13.0, id=2, nom=Kebab}
16:46:37.994 [main] DEBUG org.hibernate.SQL -
				delete from PIZZA where id=?
16:46:38.018 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:46:38.018 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:46:38.018 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:46:38.018 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:46:38.018 [main] INFO  dev.console -
				4. Supprimer une pizza
16:46:38.018 [main] INFO  dev.console -
				99. Sortir 
16:46:38.018 [main] INFO  dev.console -
				Votre choix : 
16:46:39.943 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:46:39.953 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:46:39.953 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:46:39.953 [main] INFO  dev.console -
				Liste des pizzas
16:46:39.953 [main] INFO  dev.console -
				REI -> Reine(12.0 €) Viande
16:46:39.953 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:46:39.953 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:46:39.953 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:46:39.953 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:46:39.953 [main] INFO  dev.console -
				4. Supprimer une pizza
16:46:39.953 [main] INFO  dev.console -
				99. Sortir 
16:46:39.953 [main] INFO  dev.console -
				Votre choix : 
16:48:16.677 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:48:16.722 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:48:16.769 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:48:16.769 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pu_pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_pizza]
16:48:16.770 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pu_pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:48:16.776 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pu_pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY15/Documents/workspace-sts-3.8.3.RELEASE/pizzeria-console-objet/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: evKSd8umx2tTuqh6oGK
		javax.persistence.jdbc.url: jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw
		hibernate.show_sql: false
		javax.persistence.schema-generation.database.action: drop-and-create
		javax.persistence.jdbc.user: usayprwpagsxilld]
16:48:16.785 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:48:16.787 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:48:16.788 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:48:16.788 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:48:16.840 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
16:48:16.841 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
16:48:16.842 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
16:48:16.852 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:48:16.869 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:48:16.875 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:48:16.956 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@6646153
16:48:16.956 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@6646153
16:48:16.956 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6646153
16:48:16.957 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@657c8ad9
16:48:16.958 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ad851c9
16:48:16.959 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@b62fe6d
16:48:16.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@7c417213
16:48:16.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@7c417213
16:48:16.960 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c417213
16:48:16.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@60611244
16:48:16.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@60611244
16:48:16.961 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60611244
16:48:16.962 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@fdefd3f
16:48:16.962 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@fdefd3f
16:48:16.963 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fdefd3f
16:48:16.963 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@7a52f2a2
16:48:16.963 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@7a52f2a2
16:48:16.963 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a52f2a2
16:48:16.965 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@6e75aa0d
16:48:16.965 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@6e75aa0d
16:48:16.965 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e75aa0d
16:48:16.966 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@4b44655e
16:48:16.966 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@4b44655e
16:48:16.966 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b44655e
16:48:16.967 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@6b4a4e18
16:48:16.968 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@6b4a4e18
16:48:16.968 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b4a4e18
16:48:16.969 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a955565
16:48:16.969 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a955565
16:48:16.971 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@70be0a2b
16:48:16.971 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@70be0a2b
16:48:16.971 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@1e730495
16:48:16.972 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@1e730495
16:48:16.972 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2a32de6c
16:48:16.973 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23529fee
16:48:16.974 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@5bfa9431
16:48:16.974 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@5bfa9431
16:48:16.975 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@3c72f59f
16:48:16.975 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c72f59f
16:48:16.977 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@3901d134
16:48:16.977 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3901d134
16:48:16.978 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@65d6b83b
16:48:16.978 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65d6b83b
16:48:16.978 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65d6b83b
16:48:16.979 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79efed2d
16:48:16.979 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@4278a03f
16:48:16.980 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4278a03f
16:48:16.980 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4278a03f
16:48:16.980 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@124c278f
16:48:16.981 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@6973bf95
16:48:16.981 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6973bf95
16:48:16.982 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@7a4ccb53
16:48:16.982 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a4ccb53
16:48:16.982 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@45b9a632
16:48:16.982 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45b9a632
16:48:16.983 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@54c562f7
16:48:16.983 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54c562f7
16:48:16.984 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bbf180e
16:48:16.984 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bbf180e
16:48:16.985 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@419c5f1a
16:48:16.986 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@6193932a
16:48:16.986 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@6193932a
16:48:16.986 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@6193932a
16:48:16.987 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:48:16.988 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:48:16.989 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:48:16.989 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@1677d1
16:48:16.990 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@75329a49
16:48:16.990 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@75329a49
16:48:16.990 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@75329a49
16:48:16.991 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b6faea6
16:48:16.991 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b6faea6
16:48:16.991 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b6faea6
16:48:16.992 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@56528192
16:48:16.993 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@1f3f4916
16:48:16.995 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@460d0a57
16:48:16.995 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@460d0a57
16:48:16.996 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3aefe5e5
16:48:16.998 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@769f71a9
16:48:16.998 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@769f71a9
16:48:17.000 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@1622f1b
16:48:17.001 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1622f1b
16:48:17.001 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70e8f8e
16:48:17.001 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@29626d54
16:48:17.002 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@4b0b0854
16:48:17.004 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@63355449
16:48:17.004 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@63355449
16:48:17.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48ae9b55
16:48:17.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1700915
16:48:17.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21de60b4
16:48:17.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c267ef4
16:48:17.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@30ee2816
16:48:17.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31d7b7bf
16:48:17.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@635eaaf1
16:48:17.005 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c30a9b0
16:48:17.014 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:48:17.021 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw]
16:48:17.021 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=usayprwpagsxilld, password=evKSd8umx2tTuqh6oGK}
16:48:17.021 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
16:48:17.023 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
16:48:17.024 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
16:48:17.379 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 5.5.28-0ubuntu0.12.04.3-log
      major : 5
      minor : 5
16:48:17.379 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.41 ( Revision: 83c6dc41b96809df81444362933043b20a1d49d5 )
      major : 5
      minor : 1
16:48:17.379 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
16:48:17.387 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:48:17.397 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:48:17.421 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				JDBC driver metadata reported database stores quoted identifiers in more than one case
16:48:17.423 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:48:17.452 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@3541cb24
16:48:17.452 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3541cb24
16:48:17.471 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@34f7cfd9
16:48:17.471 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34f7cfd9
16:48:17.472 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e6ef8ad
16:48:17.472 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e6ef8ad
16:48:17.473 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@747edf66
16:48:17.473 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@747edf66
16:48:17.474 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74455848
16:48:17.474 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74455848
16:48:17.474 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3738449f
16:48:17.474 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3738449f
16:48:17.475 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c333c60
16:48:17.475 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c333c60
16:48:17.478 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44821a96
16:48:17.478 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44821a96
16:48:17.522 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:48:17.523 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:48:17.523 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:48:17.523 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:48:17.524 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:48:17.525 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:48:17.525 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:48:17.526 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:48:17.526 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:48:17.527 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:48:17.527 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:48:17.527 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:48:17.527 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:48:17.528 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:48:17.563 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:48:17.600 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
16:48:17.618 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:48:17.623 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
16:48:17.625 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table PIZZA
16:48:17.651 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:48:17.653 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
16:48:17.655 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
16:48:17.657 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
16:48:17.659 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
16:48:17.666 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=CATEGORY, insertable=true, updatable=true, unique=false}
16:48:17.666 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
16:48:17.666 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:categorie]
16:48:17.667 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
16:48:17.668 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
16:48:17.668 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=CODE, insertable=true, updatable=true, unique=false}
16:48:17.668 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
16:48:17.669 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
16:48:17.669 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
16:48:17.669 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
16:48:17.669 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=PIZZA_NAME, insertable=true, updatable=true, unique=false}
16:48:17.670 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property nom with lazy=false
16:48:17.670 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:nom]
16:48:17.670 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for nom
16:48:17.670 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property nom
16:48:17.671 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=PRICE, insertable=true, updatable=true, unique=false}
16:48:17.676 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
16:48:17.676 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
16:48:17.676 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
16:48:17.676 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
16:48:17.678 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
16:48:17.678 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
16:48:17.679 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
16:48:17.679 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for nom
16:48:17.679 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
16:48:17.681 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
16:48:17.712 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
16:48:17.714 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2a225dd7
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
16:48:17.715 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
16:48:17.716 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
16:48:17.716 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
16:48:17.716 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
16:48:17.716 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
16:48:17.716 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
16:48:17.763 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
16:48:17.763 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {hibernate.connection.password=evKSd8umx2tTuqh6oGK, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.151-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_151\bin, hibernate.connection.username=usayprwpagsxilld, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7e5c856f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY15\Documents\workspace-sts-3.8.3.RELEASE\pizzeria-console-objet, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=usayprwpagsxilld, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_151\lib\endorsed, java.io.tmpdir=C:\Users\ETY15\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=evKSd8umx2tTuqh6oGK, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw, java.library.path=C:\Program Files\Java\jre1.8.0_151\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_151/bin/server;C:/Program Files/Java/jre1.8.0_151/bin;C:/Program Files/Java/jre1.8.0_151/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_151\bin;C:\Program Files\Git\cmd;C:\apache-maven-3.5.2\bin;C:\Users\ETY15\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_151;C:\apache-maven-3.5.2;;C:\Program Files\sts-bundle\sts-3.8.3.RELEASE;;., javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY15, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=ETY15, java.class.path=C:\Users\ETY15\Documents\workspace-sts-3.8.3.RELEASE\pizzeria-console-objet\target\classes;C:\Users\ETY15\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY15\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY15\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY15\.m2\repository\mysql\mysql-connector-java\5.1.41\mysql-connector-java-5.1.41.jar;C:\Users\ETY15\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY15\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY15\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY15\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY15\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY15\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY15\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY15\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY15\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY15\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-java8\5.0.12.Final\hibernate-java8-5.0.12.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_151, hibernate.connection.url=jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=C:\Program Files\Java\jre1.8.0_151\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_151\lib\resources.jar;C:\Program Files\Java\jre1.8.0_151\lib\rt.jar;C:\Program Files\Java\jre1.8.0_151\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_151\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_151\lib\jce.jar;C:\Program Files\Java\jre1.8.0_151\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_151\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_151\classes, java.vendor=Oracle Corporation, javax.persistence.schema-generation.database.action=drop-and-create, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:48:17.772 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
16:48:17.775 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:48:17.808 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:48:17.808 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:48:17.818 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:48:17.819 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:48:17.823 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.Pizza (class must be instantiated by Interceptor)
16:48:17.894 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
16:48:17.894 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from PIZZA where id =?
16:48:17.894 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.CATEGORY as CATEGORY2_0_, pizza_.CODE as CODE3_0_, pizza_.PIZZA_NAME as PIZZA_NA4_0_, pizza_.PRICE as PRICE5_0_ from PIZZA pizza_ where pizza_.id=?
16:48:17.894 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE, id) values (?, ?, ?, ?, ?)
16:48:17.894 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update PIZZA set CATEGORY=?, CODE=?, PIZZA_NAME=?, PRICE=? where id=?
16:48:17.894 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from PIZZA where id=?
16:48:17.894 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE) values (?, ?, ?, ?)
16:48:17.913 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@626c44e7]
16:48:17.913 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.914 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.914 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.914 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.914 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.923 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.927 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.929 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:17.929 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f7234e]
16:48:17.929 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.929 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.929 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.929 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.929 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.929 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.929 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.929 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:17.930 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23bff419]
16:48:17.930 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.930 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.930 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.930 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.930 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.930 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.930 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.930 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:17.930 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e3a2b2]
16:48:17.930 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.930 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.930 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.930 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.930 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.931 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.931 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.931 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:17.931 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c550889]
16:48:17.931 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.931 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.931 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.931 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.931 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.931 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.932 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.932 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:17.932 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44040454]
16:48:17.932 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.932 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.932 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.932 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.932 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.932 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.932 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.932 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:17.933 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18bc345]
16:48:17.933 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.933 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.933 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.933 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.933 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.933 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.933 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.934 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? lock in share mode
16:48:17.934 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26bab2f1]
16:48:17.934 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.934 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.934 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.934 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.934 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.935 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.935 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.935 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:17.935 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ead359]
16:48:17.935 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.935 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.935 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.935 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.935 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.936 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.936 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.936 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:17.936 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180da663]
16:48:17.936 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.936 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.936 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.937 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.937 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.937 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.937 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.937 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:17.937 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
16:48:17.937 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:17.937 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:17.938 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:17.938 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:17.938 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:17.938 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:17.939 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:17.939 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:17.952 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:17.952 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:17.952 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
16:48:17.963 [main] DEBUG org.hibernate.SQL -
				drop table if exists PIZZA
16:48:18.050 [main] DEBUG org.hibernate.SQL -
				create table PIZZA (id integer not null auto_increment, CATEGORY varchar(255), CODE varchar(255), PIZZA_NAME varchar(255), PRICE double precision, primary key (id))
16:48:18.147 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl -
				HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@32811494'
16:48:18.169 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
16:48:18.170 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:48:18.178 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:48:18.181 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
16:48:18.181 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
16:48:18.186 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e98770d
16:48:18.192 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 4c26ddde-1c8b-478f-87fe-61af7eebf426 (<unnamed>)
16:48:18.192 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
16:48:18.240 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4ee37ca3
16:48:18.240 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pu_pizza 
16:48:18.285 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
16:48:18.293 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:48:18.293 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:48:18.293 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:48:18.293 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:48:18.293 [main] INFO  dev.console -
				4. Supprimer une pizza
16:48:18.293 [main] INFO  dev.console -
				99. Sortir 
16:48:18.293 [main] INFO  dev.console -
				Votre choix : 
16:48:20.326 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@38f57b3d
16:48:20.326 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
16:48:20.357 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: from fr.pizzeria.model.Pizza
16:48:20.365 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'fr'
                |  |  \-[IDENT] Node: 'pizzeria'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Pizza'

16:48:20.365 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:48:20.388 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
16:48:20.403 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (<no alias>) -> pizza0_
16:48:20.404 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
16:48:20.404 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( FromClause{level=1} PIZZA pizza0_ ) )
16:48:20.411 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				Derived SELECT clause created.
16:48:20.416 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [PIZZA pizza0_]
16:48:20.416 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
16:48:20.416 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PIZZA)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'pizza0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=PIZZA,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'PIZZA pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=PIZZA,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

16:48:20.417 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:48:20.425 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: from fr.pizzeria.model.Pizza
16:48:20.425 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:48:20.425 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:48:20.441 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:48:20.477 [main] INFO  dev.console -
				Liste des pizzas
16:48:20.477 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:48:20.477 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:48:20.477 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:48:20.477 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:48:20.477 [main] INFO  dev.console -
				4. Supprimer une pizza
16:48:20.477 [main] INFO  dev.console -
				99. Sortir 
16:48:20.477 [main] INFO  dev.console -
				Votre choix : 
16:48:23.030 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:48:23.030 [main] INFO  dev.console -
				Veuillez saisir le code

16:48:24.214 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:48:26.231 [main] INFO  dev.console -
				Veuillez saisir le prix

16:48:27.551 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:48:29.406 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				begin
16:48:29.426 [main] DEBUG org.hibernate.engine.spi.ActionQueue -
				Executing identity-insert immediately
16:48:29.427 [main] DEBUG org.hibernate.SQL -
				insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE) values (?, ?, ?, ?)
16:48:29.440 [main] DEBUG o.h.id.IdentifierGeneratorHelper -
				Natively generated identity: 1
16:48:29.440 [main] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl -
				HHH000387: ResultSet's statement was not registered
16:48:29.441 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				committing
16:48:29.442 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Processing flush-time cascades
16:48:29.442 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Dirty checking collections
16:48:29.444 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
16:48:29.444 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
16:48:29.444 [main] DEBUG o.h.internal.util.EntityPrinter -
				Listing entities:
16:48:29.445 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=REI, prix=12.0, id=1, nom=Reine}
16:48:29.458 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:48:29.458 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:48:29.458 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:48:29.458 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:48:29.458 [main] INFO  dev.console -
				4. Supprimer une pizza
16:48:29.458 [main] INFO  dev.console -
				99. Sortir 
16:48:29.458 [main] INFO  dev.console -
				Votre choix : 
16:48:33.302 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:48:33.312 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:48:33.314 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:48:33.315 [main] INFO  dev.console -
				Liste des pizzas
16:48:33.315 [main] INFO  dev.console -
				REI -> Reine(12.0 €) Viande
16:48:33.315 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:48:33.315 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:48:33.315 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:48:33.315 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:48:33.315 [main] INFO  dev.console -
				4. Supprimer une pizza
16:48:33.315 [main] INFO  dev.console -
				99. Sortir 
16:48:33.315 [main] INFO  dev.console -
				Votre choix : 
16:48:43.113 [main] DEBUG org.jboss.logging -
				Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:48:43.155 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl -
				Incoming config yielded no classloaders; adding standard SE ones
16:48:43.207 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Located and parsed 1 persistence units; checking each
16:48:43.208 [main] DEBUG o.h.jpa.HibernatePersistenceProvider -
				Checking persistence-unit [name=pu_pizza, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_pizza]
16:48:43.209 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker -
				Persistence-unit [pu_pizza] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:48:43.215 [main] DEBUG o.h.jpa.internal.util.LogHelper -
				PersistenceUnitInfo [
	name: pu_pizza
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ETY15/Documents/workspace-sts-3.8.3.RELEASE/pizzeria-console-objet/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: evKSd8umx2tTuqh6oGK
		javax.persistence.jdbc.url: jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw
		hibernate.show_sql: false
		javax.persistence.schema-generation.database.action: drop-and-create
		javax.persistence.jdbc.user: usayprwpagsxilld]
16:48:43.225 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:48:43.226 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:48:43.228 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:48:43.228 [main] DEBUG o.h.i.internal.IntegratorServiceImpl -
				Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:48:43.280 [main] INFO  org.hibernate.Version -
				HHH000412: Hibernate Core {5.1.0.Final}
16:48:43.281 [main] INFO  org.hibernate.cfg.Environment -
				HHH000206: hibernate.properties not found
16:48:43.282 [main] INFO  org.hibernate.cfg.Environment -
				HHH000021: Bytecode provider name : javassist
16:48:43.290 [main] DEBUG o.h.service.spi.ServiceBinding -
				Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:48:43.307 [main] DEBUG o.h.c.i.RegionFactoryInitiator -
				Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:48:43.314 [main] INFO  o.h.annotations.common.Version -
				HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:48:43.389 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@6646153
16:48:43.389 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration boolean -> org.hibernate.type.BooleanType@6646153
16:48:43.389 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6646153
16:48:43.390 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@657c8ad9
16:48:43.391 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ad851c9
16:48:43.391 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration yes_no -> org.hibernate.type.YesNoType@b62fe6d
16:48:43.392 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@7c417213
16:48:43.392 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte -> org.hibernate.type.ByteType@7c417213
16:48:43.392 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c417213
16:48:43.393 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration character -> org.hibernate.type.CharacterType@60611244
16:48:43.393 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char -> org.hibernate.type.CharacterType@60611244
16:48:43.393 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60611244
16:48:43.394 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@fdefd3f
16:48:43.395 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration short -> org.hibernate.type.ShortType@fdefd3f
16:48:43.395 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fdefd3f
16:48:43.395 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration integer -> org.hibernate.type.IntegerType@7a52f2a2
16:48:43.395 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration int -> org.hibernate.type.IntegerType@7a52f2a2
16:48:43.396 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a52f2a2
16:48:43.397 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@6e75aa0d
16:48:43.397 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration long -> org.hibernate.type.LongType@6e75aa0d
16:48:43.397 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e75aa0d
16:48:43.398 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@4b44655e
16:48:43.399 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration float -> org.hibernate.type.FloatType@4b44655e
16:48:43.399 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b44655e
16:48:43.400 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@6b4a4e18
16:48:43.400 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration double -> org.hibernate.type.DoubleType@6b4a4e18
16:48:43.400 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b4a4e18
16:48:43.401 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a955565
16:48:43.402 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a955565
16:48:43.403 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration big_integer -> org.hibernate.type.BigIntegerType@70be0a2b
16:48:43.403 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@70be0a2b
16:48:43.404 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration string -> org.hibernate.type.StringType@1e730495
16:48:43.404 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.String -> org.hibernate.type.StringType@1e730495
16:48:43.404 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2a32de6c
16:48:43.405 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23529fee
16:48:43.406 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration url -> org.hibernate.type.UrlType@5bfa9431
16:48:43.406 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.net.URL -> org.hibernate.type.UrlType@5bfa9431
16:48:43.407 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration date -> org.hibernate.type.DateType@3c72f59f
16:48:43.407 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c72f59f
16:48:43.409 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration time -> org.hibernate.type.TimeType@3901d134
16:48:43.409 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3901d134
16:48:43.410 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timestamp -> org.hibernate.type.TimestampType@65d6b83b
16:48:43.410 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65d6b83b
16:48:43.410 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65d6b83b
16:48:43.411 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79efed2d
16:48:43.411 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar -> org.hibernate.type.CalendarType@4278a03f
16:48:43.412 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4278a03f
16:48:43.412 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4278a03f
16:48:43.412 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@124c278f
16:48:43.413 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration locale -> org.hibernate.type.LocaleType@6973bf95
16:48:43.413 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6973bf95
16:48:43.414 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration currency -> org.hibernate.type.CurrencyType@7a4ccb53
16:48:43.415 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a4ccb53
16:48:43.415 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration timezone -> org.hibernate.type.TimeZoneType@45b9a632
16:48:43.415 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45b9a632
16:48:43.416 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration class -> org.hibernate.type.ClassType@54c562f7
16:48:43.416 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54c562f7
16:48:43.418 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bbf180e
16:48:43.418 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bbf180e
16:48:43.419 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@419c5f1a
16:48:43.420 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration binary -> org.hibernate.type.BinaryType@6193932a
16:48:43.420 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration byte[] -> org.hibernate.type.BinaryType@6193932a
16:48:43.420 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [B -> org.hibernate.type.BinaryType@6193932a
16:48:43.421 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:48:43.421 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:48:43.422 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:48:43.422 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration image -> org.hibernate.type.ImageType@1677d1
16:48:43.423 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration characters -> org.hibernate.type.CharArrayType@75329a49
16:48:43.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration char[] -> org.hibernate.type.CharArrayType@75329a49
16:48:43.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [C -> org.hibernate.type.CharArrayType@75329a49
16:48:43.425 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b6faea6
16:48:43.425 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b6faea6
16:48:43.425 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b6faea6
16:48:43.426 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration text -> org.hibernate.type.TextType@56528192
16:48:43.426 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ntext -> org.hibernate.type.NTextType@1f3f4916
16:48:43.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration blob -> org.hibernate.type.BlobType@460d0a57
16:48:43.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@460d0a57
16:48:43.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3aefe5e5
16:48:43.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration clob -> org.hibernate.type.ClobType@769f71a9
16:48:43.434 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@769f71a9
16:48:43.437 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration nclob -> org.hibernate.type.NClobType@1622f1b
16:48:43.437 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1622f1b
16:48:43.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70e8f8e
16:48:43.438 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@29626d54
16:48:43.439 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration serializable -> org.hibernate.type.SerializableType@4b0b0854
16:48:43.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration object -> org.hibernate.type.ObjectType@63355449
16:48:43.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@63355449
16:48:43.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48ae9b55
16:48:43.442 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1700915
16:48:43.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21de60b4
16:48:43.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c267ef4
16:48:43.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@30ee2816
16:48:43.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31d7b7bf
16:48:43.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@635eaaf1
16:48:43.443 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c30a9b0
16:48:43.450 [main] WARN  org.hibernate.orm.connections -
				HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:48:43.457 [main] INFO  org.hibernate.orm.connections -
				HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw]
16:48:43.457 [main] INFO  org.hibernate.orm.connections -
				HHH10001001: Connection properties: {user=usayprwpagsxilld, password=evKSd8umx2tTuqh6oGK}
16:48:43.457 [main] INFO  org.hibernate.orm.connections -
				HHH10001003: Autocommit mode: false
16:48:43.459 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				Initializing Connection pool with 1 Connections
16:48:43.459 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl -
				HHH000115: Hibernate connection pool size: 20 (min=1)
16:48:43.736 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Database ->
       name : MySQL
    version : 5.5.28-0ubuntu0.12.04.3-log
      major : 5
      minor : 5
16:48:43.737 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.41 ( Revision: 83c6dc41b96809df81444362933043b20a1d49d5 )
      major : 5
      minor : 1
16:48:43.737 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator -
				JDBC version : 4.0
16:48:43.768 [main] INFO  org.hibernate.dialect.Dialect -
				HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:48:43.787 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport -
				Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:48:43.805 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				JDBC driver metadata reported database stores quoted identifiers in more than one case
16:48:43.807 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder -
				IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:48:43.833 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Duration -> org.hibernate.type.DurationType@3541cb24
16:48:43.833 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3541cb24
16:48:43.848 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration Instant -> org.hibernate.type.InstantType@34f7cfd9
16:48:43.849 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.Instant -> org.hibernate.type.InstantType@34f7cfd9
16:48:43.849 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e6ef8ad
16:48:43.849 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e6ef8ad
16:48:43.850 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalDate -> org.hibernate.type.LocalDateType@747edf66
16:48:43.850 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@747edf66
16:48:43.851 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74455848
16:48:43.851 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74455848
16:48:43.851 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3738449f
16:48:43.852 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3738449f
16:48:43.852 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@c333c60
16:48:43.852 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@c333c60
16:48:43.854 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44821a96
16:48:43.854 [main] DEBUG org.hibernate.type.BasicTypeRegistry -
				Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44821a96
16:48:43.891 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:48:43.892 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:48:43.892 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:48:43.892 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:48:43.892 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:48:43.893 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:48:43.893 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:48:43.894 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:48:43.895 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:48:43.895 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:48:43.895 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:48:43.895 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:48:43.896 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:48:43.896 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory -
				Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:48:43.924 [main] DEBUG o.h.boot.model.relational.Namespace -
				Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:48:43.951 [main] DEBUG org.hibernate.cfg.AnnotationBinder -
				Binding entity from annotated class: fr.pizzeria.model.Pizza
16:48:43.965 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:48:43.969 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Import with entity name Pizza
16:48:43.972 [main] DEBUG o.h.cfg.annotations.EntityBinder -
				Bind entity fr.pizzeria.model.Pizza on table PIZZA
16:48:43.991 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:48:43.993 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property id with lazy=false
16:48:43.994 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:id]
16:48:43.995 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for id
16:48:43.997 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property id
16:48:44.002 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=CATEGORY, insertable=true, updatable=true, unique=false}
16:48:44.002 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property categorie with lazy=false
16:48:44.002 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:categorie]
16:48:44.003 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for categorie
16:48:44.003 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property categorie
16:48:44.004 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=CODE, insertable=true, updatable=true, unique=false}
16:48:44.004 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property code with lazy=false
16:48:44.004 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:code]
16:48:44.004 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for code
16:48:44.004 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property code
16:48:44.004 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=PIZZA_NAME, insertable=true, updatable=true, unique=false}
16:48:44.004 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property nom with lazy=false
16:48:44.004 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:nom]
16:48:44.004 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for nom
16:48:44.004 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property nom
16:48:44.004 [main] DEBUG org.hibernate.cfg.Ejb3Column -
				Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PIZZA), mappingColumn=PRICE, insertable=true, updatable=true, unique=false}
16:48:44.005 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				MetadataSourceProcessor property prix with lazy=false
16:48:44.005 [main] DEBUG o.h.cfg.AbstractPropertyHolder -
				Attempting to locate auto-apply AttributeConverter for property [fr.pizzeria.model.Pizza:prix]
16:48:44.005 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				building SimpleValue for prix
16:48:44.005 [main] DEBUG o.h.cfg.annotations.PropertyBinder -
				Building property prix
16:48:44.006 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for id
16:48:44.006 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for categorie
16:48:44.007 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for code
16:48:44.007 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for nom
16:48:44.007 [main] DEBUG o.h.c.annotations.SimpleValueBinder -
				Starting fillSimpleValue for prix
16:48:44.008 [main] DEBUG org.hibernate.mapping.PrimaryKey -
				Forcing column [id] to be non-null as it is part of the primary key for table [pizza]
16:48:44.033 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Building session factory
16:48:44.034 [main] DEBUG org.hibernate.cfg.Settings -
				SessionFactory name : null
16:48:44.034 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic flush during beforeCompletion(): disabled
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic session close at end of transaction: disabled
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Statistics: disabled
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Deleted entity synthetic identifier rollback: disabled
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Default entity-mode: pojo
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Allow initialization of lazy state outside session : disabled
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Using BatchFetchStyle : LEGACY
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Default batch fetch size: -1
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Maximum outer join fetch depth: 2
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Default null ordering: NONE
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL updates by primary key: disabled
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Order SQL inserts for batching: disabled
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				multi-tenancy strategy : NONE
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				JTA Track by Thread: enabled
16:48:44.035 [main] DEBUG org.hibernate.cfg.Settings -
				Query language substitutions: {}
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				JPA query language strict compliance: disabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Named query checking : enabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache: enabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache: disabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2a225dd7
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache region prefix: null
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Optimize second-level cache for minimal puts: disabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Structured second-level cache entries: disabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Second-level cache direct-reference entries: disabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Automatic eviction of collection cache: disabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch size: 15
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC batch updates for versioned data: enabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Scrollable result sets: enabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Wrap result sets: disabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC3 getGeneratedKeys(): enabled
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				JDBC result set fetch size: null
16:48:44.036 [main] DEBUG org.hibernate.cfg.Settings -
				Connection release mode: ON_CLOSE
16:48:44.037 [main] DEBUG org.hibernate.cfg.Settings -
				Generate SQL with comments: disabled
16:48:44.068 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Session factory constructed with filter configurations : {}
16:48:44.069 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiating session factory with properties: {hibernate.connection.password=evKSd8umx2tTuqh6oGK, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.151-b12, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_151\bin, hibernate.connection.username=usayprwpagsxilld, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7e5c856f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\ETY15\Documents\workspace-sts-3.8.3.RELEASE\pizzeria-console-objet, java.runtime.version=1.8.0_151-b12, javax.persistence.jdbc.user=usayprwpagsxilld, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_151\lib\endorsed, java.io.tmpdir=C:\Users\ETY15\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=evKSd8umx2tTuqh6oGK, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw, java.library.path=C:\Program Files\Java\jre1.8.0_151\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_151/bin/server;C:/Program Files/Java/jre1.8.0_151/bin;C:/Program Files/Java/jre1.8.0_151/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_151\bin;C:\Program Files\Git\cmd;C:\apache-maven-3.5.2\bin;C:\Users\ETY15\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Java\jdk1.8.0_151;C:\apache-maven-3.5.2;;C:\Program Files\sts-bundle\sts-3.8.3.RELEASE;;., javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_pizza, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\ETY15, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=ETY15, java.class.path=C:\Users\ETY15\Documents\workspace-sts-3.8.3.RELEASE\pizzeria-console-objet\target\classes;C:\Users\ETY15\.m2\repository\org\slf4j\slf4j-api\1.7.18\slf4j-api-1.7.18.jar;C:\Users\ETY15\.m2\repository\ch\qos\logback\logback-classic\1.2.2\logback-classic-1.2.2.jar;C:\Users\ETY15\.m2\repository\ch\qos\logback\logback-core\1.2.2\logback-core-1.2.2.jar;C:\Users\ETY15\.m2\repository\mysql\mysql-connector-java\5.1.41\mysql-connector-java-5.1.41.jar;C:\Users\ETY15\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\ETY15\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\ETY15\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ETY15\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\ETY15\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\ETY15\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ETY15\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\ETY15\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\ETY15\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\ETY15\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\ETY15\.m2\repository\org\hibernate\hibernate-java8\5.0.12.Final\hibernate-java8-5.0.12.Final.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=fr.pizzeria.console.PizzeriaAdminConsoleApp, java.home=C:\Program Files\Java\jre1.8.0_151, hibernate.connection.url=jdbc:mysql://btoapuzaw-mysql.services.clever-cloud.com:3306/btoapuzaw, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_151, java.ext.dirs=C:\Program Files\Java\jre1.8.0_151\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_151\lib\resources.jar;C:\Program Files\Java\jre1.8.0_151\lib\rt.jar;C:\Program Files\Java\jre1.8.0_151\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_151\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_151\lib\jce.jar;C:\Program Files\Java\jre1.8.0_151\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_151\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_151\classes, java.vendor=Oracle Corporation, javax.persistence.schema-generation.database.action=drop-and-create, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:48:44.076 [main] DEBUG o.h.secure.spi.JaccIntegrator -
				Skipping JACC integration as it was not enabled
16:48:44.079 [main] DEBUG o.hibernate.engine.spi.CascadeStyles -
				External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:48:44.110 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:48:44.111 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:48:44.118 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				Not known whether passed class name [fr.pizzeria.model.Pizza] is safe
16:48:44.118 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl -
				No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : fr.pizzeria.model.Pizza
16:48:44.122 [main] INFO  org.hibernate.tuple.PojoInstantiator -
				HHH000182: No default (no-argument) constructor for class: fr.pizzeria.model.Pizza (class must be instantiated by Interceptor)
16:48:44.190 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				Static SQL for entity: fr.pizzeria.model.Pizza
16:48:44.191 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Version select: select id from PIZZA where id =?
16:48:44.191 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Snapshot select: select pizza_.id, pizza_.CATEGORY as CATEGORY2_0_, pizza_.CODE as CODE3_0_, pizza_.PIZZA_NAME as PIZZA_NA4_0_, pizza_.PRICE as PRICE5_0_ from PIZZA pizza_ where pizza_.id=?
16:48:44.191 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Insert 0: insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE, id) values (?, ?, ?, ?, ?)
16:48:44.191 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Update 0: update PIZZA set CATEGORY=?, CODE=?, PIZZA_NAME=?, PRICE=? where id=?
16:48:44.191 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Delete 0: delete from PIZZA where id=?
16:48:44.191 [main] DEBUG o.h.p.entity.AbstractEntityPersister -
				 Identity insert: insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE) values (?, ?, ?, ?)
16:48:44.210 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@626c44e7]
16:48:44.211 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.211 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.211 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.211 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.211 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.221 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.225 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.227 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [NONE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:44.227 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f7234e]
16:48:44.227 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.227 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.227 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.227 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.227 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.228 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.228 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.228 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [READ]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:44.228 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23bff419]
16:48:44.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.228 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.229 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.229 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.229 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.229 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:44.229 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e3a2b2]
16:48:44.230 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.230 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.230 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.230 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.230 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.230 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.230 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.230 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_NOWAIT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:44.231 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c550889]
16:48:44.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.231 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.231 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.231 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.231 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.231 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [UPGRADE_SKIPLOCKED]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:44.231 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44040454]
16:48:44.232 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.232 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.232 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.232 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.232 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.232 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.232 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.232 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [FORCE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:44.232 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18bc345]
16:48:44.232 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.232 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.232 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.232 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.233 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.233 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.233 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.233 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_READ]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? lock in share mode
16:48:44.233 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26bab2f1]
16:48:44.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.233 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.234 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.234 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.234 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.234 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_WRITE]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:44.234 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ead359]
16:48:44.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.234 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.235 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.235 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.235 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.235 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [PESSIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=? for update
16:48:44.235 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180da663]
16:48:44.235 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.235 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.235 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.235 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.235 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.236 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.236 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.236 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:44.236 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl -
				Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
16:48:44.236 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : categorie
16:48:44.236 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : code
16:48:44.236 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : nom
16:48:44.236 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker -
				Visiting attribute path : prix
16:48:44.236 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy -
				Building LoadPlan...
16:48:44.237 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor -
				processing queryspace <gen:0>
16:48:44.237 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter -
				LoadPlan(entity=fr.pizzeria.model.Pizza)
    - Returns
       - EntityReturnImpl(entity=fr.pizzeria.model.Pizza, querySpaceUid=<gen:0>, path=fr.pizzeria.model.Pizza)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.pizzeria.model.Pizza)
          - SQL table alias mapping - pizza0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:48:44.238 [main] DEBUG o.h.loader.entity.plan.EntityLoader -
				Static select for entity fr.pizzeria.model.Pizza [OPTIMISTIC_FORCE_INCREMENT]: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:44.249 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_MERGE on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:44.250 [main] DEBUG org.hibernate.loader.Loader -
				Static select for action ACTION_REFRESH on entity fr.pizzeria.model.Pizza: select pizza0_.id as id1_0_0_, pizza0_.CATEGORY as CATEGORY2_0_0_, pizza0_.CODE as CODE3_0_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_0_, pizza0_.PRICE as PRICE5_0_0_ from PIZZA pizza0_ where pizza0_.id=?
16:48:44.250 [main] DEBUG o.h.internal.SessionFactoryImpl -
				Instantiated session factory
16:48:44.261 [main] DEBUG org.hibernate.SQL -
				drop table if exists PIZZA
16:48:44.329 [main] DEBUG org.hibernate.SQL -
				create table PIZZA (id integer not null auto_increment, CATEGORY varchar(255), CODE varchar(255), PIZZA_NAME varchar(255), PRICE double precision, primary key (id))
16:48:44.381 [main] INFO  o.h.t.s.internal.SchemaCreatorImpl -
				HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@32811494'
16:48:44.403 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator -
				No JtaPlatform was specified, checking resolver
16:48:44.404 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator -
				No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:48:44.411 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver -
				Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:48:44.414 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named HQL queries
16:48:44.414 [main] DEBUG o.h.internal.NamedQueryRepository -
				Checking 0 named SQL queries
16:48:44.419 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@e98770d
16:48:44.422 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Registering SessionFactory: 6edf2b1c-0eaa-44d7-848b-1385cd0fc352 (<unnamed>)
16:48:44.422 [main] DEBUG o.h.internal.SessionFactoryRegistry -
				Not binding SessionFactory to JNDI, no JNDI name configured
16:48:44.462 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4ee37ca3
16:48:44.463 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry -
				Registering EntityManagerFactory: pu_pizza 
16:48:44.502 [main] DEBUG o.h.s.internal.StatisticsInitiator -
				Statistics initialized [enabled=false]
16:48:44.508 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:48:44.508 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:48:44.508 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:48:44.508 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:48:44.509 [main] INFO  dev.console -
				4. Supprimer une pizza
16:48:44.509 [main] INFO  dev.console -
				99. Sortir 
16:48:44.509 [main] INFO  dev.console -
				Votre choix : 
16:48:46.317 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator -
				QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@38f57b3d
16:48:46.317 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator -
				HHH000397: Using ASTQueryTranslatorFactory
16:48:46.344 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: from fr.pizzeria.model.Pizza
16:48:46.352 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[IDENT] Node: 'fr'
                |  |  \-[IDENT] Node: 'pizzeria'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Pizza'

16:48:46.352 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:48:46.376 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
16:48:46.391 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (<no alias>) -> pizza0_
16:48:46.391 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
16:48:46.391 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( FromClause{level=1} PIZZA pizza0_ ) )
16:48:46.398 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				Derived SELECT clause created.
16:48:46.403 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [PIZZA pizza0_]
16:48:46.403 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
16:48:46.404 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PIZZA)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'pizza0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=PIZZA,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'PIZZA pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=PIZZA,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}

16:48:46.404 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:48:46.413 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: from fr.pizzeria.model.Pizza
16:48:46.413 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:48:46.413 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:48:46.432 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:48:46.469 [main] INFO  dev.console -
				Liste des pizzas
16:48:46.469 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:48:46.469 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:48:46.469 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:48:46.469 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:48:46.469 [main] INFO  dev.console -
				4. Supprimer une pizza
16:48:46.469 [main] INFO  dev.console -
				99. Sortir 
16:48:46.469 [main] INFO  dev.console -
				Votre choix : 
16:48:48.934 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:48:48.935 [main] INFO  dev.console -
				Veuillez saisir le code

16:48:51.854 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:48:53.439 [main] INFO  dev.console -
				Veuillez saisir le prix

16:48:56.287 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:48:59.678 [main] INFO  dev.console -
				Votre catégorie ne peut être que : VIANDE, SANS_VIANDE ou POISSON !
16:48:59.678 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:48:59.678 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:48:59.678 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:48:59.678 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:48:59.678 [main] INFO  dev.console -
				4. Supprimer une pizza
16:48:59.678 [main] INFO  dev.console -
				99. Sortir 
16:48:59.678 [main] INFO  dev.console -
				Votre choix : 
16:49:03.198 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:49:03.208 [main] INFO  dev.console -
				Liste des pizzas
16:49:03.208 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:49:03.208 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:49:03.208 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:49:03.208 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:49:03.208 [main] INFO  dev.console -
				4. Supprimer une pizza
16:49:03.208 [main] INFO  dev.console -
				99. Sortir 
16:49:03.208 [main] INFO  dev.console -
				Votre choix : 
16:49:04.670 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:49:04.670 [main] INFO  dev.console -
				Veuillez saisir le code

16:49:05.846 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:49:07.254 [main] INFO  dev.console -
				Veuillez saisir le prix

16:49:08.390 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:49:10.767 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				begin
16:49:10.785 [main] DEBUG org.hibernate.engine.spi.ActionQueue -
				Executing identity-insert immediately
16:49:10.787 [main] DEBUG org.hibernate.SQL -
				insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE) values (?, ?, ?, ?)
16:49:10.798 [main] DEBUG o.h.id.IdentifierGeneratorHelper -
				Natively generated identity: 1
16:49:10.798 [main] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl -
				HHH000387: ResultSet's statement was not registered
16:49:10.800 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				committing
16:49:10.801 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Processing flush-time cascades
16:49:10.801 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Dirty checking collections
16:49:10.802 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
16:49:10.802 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
16:49:10.803 [main] DEBUG o.h.internal.util.EntityPrinter -
				Listing entities:
16:49:10.803 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=REI, prix=12.0, id=1, nom=Reine}
16:49:10.818 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:49:10.818 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:49:10.818 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:49:10.818 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:49:10.818 [main] INFO  dev.console -
				4. Supprimer une pizza
16:49:10.818 [main] INFO  dev.console -
				99. Sortir 
16:49:10.818 [main] INFO  dev.console -
				Votre choix : 
16:49:15.070 [main] INFO  dev.console -
				Ajout d'une nouvelle pizza 

16:49:15.071 [main] INFO  dev.console -
				Veuillez saisir le code

16:49:16.382 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:49:18.254 [main] INFO  dev.console -
				Veuillez saisir le prix

16:49:21.215 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:49:23.374 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				begin
16:49:23.383 [main] DEBUG org.hibernate.engine.spi.ActionQueue -
				Executing identity-insert immediately
16:49:23.383 [main] DEBUG org.hibernate.SQL -
				insert into PIZZA (CATEGORY, CODE, PIZZA_NAME, PRICE) values (?, ?, ?, ?)
16:49:23.394 [main] DEBUG o.h.id.IdentifierGeneratorHelper -
				Natively generated identity: 2
16:49:23.394 [main] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl -
				HHH000387: ResultSet's statement was not registered
16:49:23.394 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				committing
16:49:23.394 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Processing flush-time cascades
16:49:23.394 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Dirty checking collections
16:49:23.394 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
16:49:23.394 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
16:49:23.394 [main] DEBUG o.h.internal.util.EntityPrinter -
				Listing entities:
16:49:23.394 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=REI, prix=12.0, id=1, nom=Reine}
16:49:23.394 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=POISSON, code=SAU, prix=14.0, id=2, nom=Saumon}
16:49:23.408 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:49:23.408 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:49:23.408 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:49:23.408 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:49:23.408 [main] INFO  dev.console -
				4. Supprimer une pizza
16:49:23.408 [main] INFO  dev.console -
				99. Sortir 
16:49:23.408 [main] INFO  dev.console -
				Votre choix : 
16:49:25.726 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:49:25.739 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:49:25.741 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:49:25.741 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 1
16:49:25.741 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#2]
16:49:25.741 [main] INFO  dev.console -
				Liste des pizzas
16:49:25.741 [main] INFO  dev.console -
				REI -> Reine(12.0 €) Viande
16:49:25.741 [main] INFO  dev.console -
				SAU -> Saumon(14.0 €) Poisson
16:49:25.741 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:49:25.741 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:49:25.741 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:49:25.741 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:49:25.741 [main] INFO  dev.console -
				4. Supprimer une pizza
16:49:25.741 [main] INFO  dev.console -
				99. Sortir 
16:49:25.741 [main] INFO  dev.console -
				Votre choix : 
16:49:28.878 [main] INFO  dev.console -
				Mise à jour d'une pizza
16:49:28.879 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:49:28.888 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:49:28.889 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:49:28.889 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 1
16:49:28.889 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#2]
16:49:28.889 [main] INFO  dev.console -
				Veuillez choisir la pizza a modifier

16:49:28.889 [main] INFO  dev.console -
				99 pour abandonner

16:49:31.390 [main] INFO  dev.console -
				Veuillez saisir le code

16:49:32.926 [main] INFO  dev.console -
				Veuillez saisir le nom (sans espace)

16:49:34.582 [main] INFO  dev.console -
				Veuillez saisir le prix

16:49:36.422 [main] INFO  dev.console -
				Veuillez saisir la categorie de votre pizza (VIANDE, SANS_VIANDE ou POISSON)

16:49:39.134 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				parse() - HQL: from fr.pizzeria.model.Pizza WHERE code=:target
16:49:39.137 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'fr'
    |           |  |  \-[IDENT] Node: 'pizzeria'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Pizza'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'code'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'target'

16:49:39.137 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:49:39.137 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select << begin [level=1, statement=select]
16:49:39.137 [main] DEBUG o.h.h.internal.ast.tree.FromElement -
				FromClause{level=1} : fr.pizzeria.model.Pizza (<no alias>) -> pizza0_
16:49:39.139 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : {synthetic-alias} -> {synthetic-alias}
16:49:39.140 [main] DEBUG o.h.hql.internal.ast.tree.DotNode -
				getDataType() : code -> org.hibernate.type.StringType@1e730495
16:49:39.140 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode -
				Resolved : {synthetic-alias}.code -> pizza0_.CODE
16:49:39.142 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select : finishing up [level=1, statement=select]
16:49:39.142 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				processQuery() :  ( SELECT ( FromClause{level=1} PIZZA pizza0_ ) ( WHERE ( = ( pizza0_.CODE {synthetic-alias} code ) ? ) ) )
16:49:39.142 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker -
				Derived SELECT clause created.
16:49:39.142 [main] DEBUG o.h.h.i.ast.util.JoinProcessor -
				Using FROM fragment [PIZZA pizza0_]
16:49:39.142 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker -
				select >> end [level=1, statement=select]
16:49:39.142 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PIZZA)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'pizza0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=PIZZA,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}}
    |  \-[SQL_TOKEN] SqlFragment: 'pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[pizza0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'PIZZA pizza0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=PIZZA,tableAlias=pizza0_,origin=null,columns={,className=fr.pizzeria.model.Pizza}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'pizza0_.CODE' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path={synthetic-alias}.code,tableAlias=pizza0_,className=fr.pizzeria.model.Pizza,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'code' {originalText=code}
          \-[NAMED_PARAM] ParameterNode: '?' {name=target, expectedType=org.hibernate.type.StringType@1e730495}

16:49:39.142 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:49:39.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				HQL: from fr.pizzeria.model.Pizza WHERE code=:target
16:49:39.143 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl -
				SQL: select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_ where pizza0_.CODE=?
16:49:39.143 [main] DEBUG o.h.hql.internal.ast.ErrorCounter -
				throwQueryException() : no errors
16:49:39.146 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_ where pizza0_.CODE=?
16:49:39.156 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:49:39.156 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:49:39.156 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				begin
16:49:39.166 [main] DEBUG o.h.e.t.internal.TransactionImpl -
				committing
16:49:39.166 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Processing flush-time cascades
16:49:39.166 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Dirty checking collections
16:49:39.168 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
16:49:39.168 [main] DEBUG o.h.e.i.AbstractFlushingEventListener -
				Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
16:49:39.168 [main] DEBUG o.h.internal.util.EntityPrinter -
				Listing entities:
16:49:39.168 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=VIANDE, code=KEB, prix=13.0, id=1, nom=Kebab}
16:49:39.168 [main] DEBUG o.h.internal.util.EntityPrinter -
				fr.pizzeria.model.Pizza{categorie=POISSON, code=SAU, prix=14.0, id=2, nom=Saumon}
16:49:39.172 [main] DEBUG org.hibernate.SQL -
				update PIZZA set CATEGORY=?, CODE=?, PIZZA_NAME=?, PRICE=? where id=?
16:49:39.196 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:49:39.196 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:49:39.196 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:49:39.196 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:49:39.196 [main] INFO  dev.console -
				4. Supprimer une pizza
16:49:39.196 [main] INFO  dev.console -
				99. Sortir 
16:49:39.196 [main] INFO  dev.console -
				Votre choix : 
16:49:41.550 [main] DEBUG org.hibernate.SQL -
				select pizza0_.id as id1_0_, pizza0_.CATEGORY as CATEGORY2_0_, pizza0_.CODE as CODE3_0_, pizza0_.PIZZA_NAME as PIZZA_NA4_0_, pizza0_.PRICE as PRICE5_0_ from PIZZA pizza0_
16:49:41.560 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 0
16:49:41.560 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#1]
16:49:41.560 [main] DEBUG org.hibernate.loader.Loader -
				Result set row: 1
16:49:41.560 [main] DEBUG org.hibernate.loader.Loader -
				Result row: EntityKey[fr.pizzeria.model.Pizza#2]
16:49:41.560 [main] INFO  dev.console -
				Liste des pizzas
16:49:41.560 [main] INFO  dev.console -
				KEB -> Kebab(13.0 €) Viande
16:49:41.560 [main] INFO  dev.console -
				SAU -> Saumon(14.0 €) Poisson
16:49:41.560 [main] INFO  dev.console -
				***** Pizzeria Administration ***** 
16:49:41.560 [main] INFO  dev.console -
				1. Afficher la liste des pizzas
16:49:41.560 [main] INFO  dev.console -
				2. Ajouter une nouvelle pizza
16:49:41.560 [main] INFO  dev.console -
				3. Mettre à jour une pizza
16:49:41.560 [main] INFO  dev.console -
				4. Supprimer une pizza
16:49:41.560 [main] INFO  dev.console -
				99. Sortir 
16:49:41.560 [main] INFO  dev.console -
				Votre choix : 
16:49:48.382 [main] INFO  dev.console -
				Au revoir :(
